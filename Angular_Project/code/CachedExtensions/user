{"input":{"ourVersion":"1.31.1","commit":"1b8e8302e405050205e69b59abb3559592bb9e60","locale":"en-us","devMode":false,"absoluteFolderPath":"/home/miri/.vscode/extensions","isBuiltin":false,"isUnderDevelopment":false,"tanslations":{},"mtime":1552163373345},"result":[{"name":"bracket-pair-colorizer-2","displayName":"Bracket Pair Colorizer 2","description":"A customizable extension for colorizing matching brackets","version":"0.0.28","publisher":"CoenraadS","engines":{"vscode":"^1.31.0"},"icon":"images/icon.png","categories":["Other"],"activationEvents":["*"],"keywords":["bracket","brackets","pair","color","colour","multi-root ready"],"galleryBanner":{"color":"#1E1E1E","theme":"dark"},"main":"/home/miri/.vscode/extensions/coenraads.bracket-pair-colorizer-2-0.0.28/out/src/extension","contributes":{"commands":[{"command":"bracket-pair-colorizer-2.expandBracketSelection","title":"Expand Bracket Selection"},{"command":"bracket-pair-colorizer-2.undoBracketSelection","title":"Undo Bracket Selection"}],"configuration":{"type":"object","title":"Bracket Pair Colorizer 2","properties":{"bracket-pair-colorizer-2.colors":{"type":"array","default":["Gold","Orchid","LightSkyBlue"],"description":"Scope colors","scope":"window"},"bracket-pair-colorizer-2.unmatchedScopeColor":{"type":"string","default":"Red","description":"Unmatched Scope Color","scope":"window"},"bracket-pair-colorizer-2.forceUniqueOpeningColor":{"type":"boolean","default":false,"description":"Ensure that an opening brackets color does not match a previous brackets color","scope":"window"},"bracket-pair-colorizer-2.forceIterationColorCycle":{"type":"boolean","default":false,"description":"Should opening brackets iterate the color cycle even if they are not nested","scope":"window"},"bracket-pair-colorizer-2.colorMode":{"type":"string","enum":["Consecutive","Independent"],"default":"Consecutive","description":"Should different brackets share a color group (Consecutive), or use their own color group (Independent)","scope":"window"},"bracket-pair-colorizer-2.highlightActiveScope":{"type":"boolean","default":false,"description":"Should the active scope brackets always be highlighted? Recommended to disable editor.matchBrackets if using this feature.","scope":"window"},"bracket-pair-colorizer-2.activeScopeCSS":{"type":"array","default":["borderStyle : solid","borderWidth : 1px","borderColor : {color}","opacity: 0.5"],"description":"CSS for the active scope. Use {color} to match the bracket color. The string types listed at https://code.visualstudio.com/docs/extensionAPI/vscode-api#DecorationRenderOptions can be used","scope":"window"},"bracket-pair-colorizer-2.showBracketsInGutter":{"type":"boolean","default":false,"description":"Show active bracket scope in gutter?","scope":"window"},"bracket-pair-colorizer-2.showBracketsInRuler":{"type":"boolean","default":false,"description":"Show active bracket scope in ruler?","scope":"window"},"bracket-pair-colorizer-2.rulerPosition":{"type":"string","enum":["Center","Full","Left","Right"],"default":"Center","description":"Show active bracket scope in ruler?","scope":"window"},"bracket-pair-colorizer-2.showVerticalScopeLine":{"type":"boolean","default":true,"description":"Show a vertical line on the left side of the editor representing the active bracket scope?","scope":"window"},"bracket-pair-colorizer-2.showHorizontalScopeLine":{"type":"boolean","default":true,"description":"Show a horizontal line to create a block around the active bracket scope?","scope":"window"},"bracket-pair-colorizer-2.scopeLineRelativePosition":{"type":"boolean","default":true,"description":"True: Scope Line will start from the ending bracket position. False: Scope Line will always be at column 0","scope":"window"},"bracket-pair-colorizer-2.scopeLineCSS":{"type":"array","default":["borderStyle : solid","borderWidth : 1px","borderColor : {color}","opacity: 0.5"],"description":"CSS for the scope line. Use {color} to match the bracket color. The string types listed at https://code.visualstudio.com/docs/extensionAPI/vscode-api#DecorationRenderOptions can be used","scope":"window"},"bracket-pair-colorizer-2.excludedLanguages":{"type":"array","default":[],"description":"Don't colorize files of these languages","scope":"window"}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/json5":"0.0.30","@types/mocha":"^2.2.32","@types/node":"^6.0.117","mocha":"^2.3.3","tslint":"^4.5.1","typescript":"^2.9.2","vscode":"^1.1.21"},"repository":{"type":"git","url":"https://github.com/CoenraadS/Bracket-Pair-Colorizer-2"},"license":"SEE LICENSE IN LICENSE.md","dependencies":{"escape-html":"^1.0.3","json5":"^2.1.0","vscode-uri":"^1.0.6"},"uuid":"5a6e2b21-1d61-4acd-b31b-907f9c23f18a","isBuiltin":false,"isUnderDevelopment":false,"id":"CoenraadS.bracket-pair-colorizer-2","identifier":{"value":"CoenraadS.bracket-pair-colorizer-2","_lower":"coenraads.bracket-pair-colorizer-2"},"extensionLocation":{"$mid":1,"fsPath":"/home/miri/.vscode/extensions/coenraads.bracket-pair-colorizer-2-0.0.28","path":"/home/miri/.vscode/extensions/coenraads.bracket-pair-colorizer-2-0.0.28","scheme":"file"}},{"name":"vscode-eslint","displayName":"ESLint","description":"Integrates ESLint JavaScript into VS Code.","version":"1.8.2","author":"Microsoft Corporation","license":"MIT","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-eslint.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-eslint/issues"},"publisher":"dbaeumer","icon":"eslint_icon.png","categories":["Programming Languages","Linters"],"keywords":["multi-root ready"],"engines":{"vscode":"^1.31.0"},"activationEvents":["*"],"main":"/home/miri/.vscode/extensions/dbaeumer.vscode-eslint-1.8.2/client/out/extension","contributes":{"configuration":{"type":"object","title":"ESLint","properties":{"eslint.enable":{"scope":"resource","type":"boolean","default":true,"description":"Controls whether eslint is enabled for JavaScript files or not."},"eslint.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","description":"The package manager you use to install node modules."},"eslint.alwaysShowStatus":{"type":"boolean","default":false,"description":"Always show the ESlint status bar item.","scope":"window"},"eslint.nodePath":{"scope":"resource","type":["string","null"],"default":null,"description":"A path added to NODE_PATH when resolving the eslint module."},"eslint.options":{"scope":"resource","type":"object","default":{},"description":"The eslint options object to provide args normally passed to eslint when executed from a command line (see http://eslint.org/docs/developer-guide/nodejs-api#cliengine)."},"eslint.trace.server":{"scope":"window","anyOf":[{"type":"string","enum":["off","messages","verbose"],"default":"off"},{"type":"object","properties":{"verbosity":{"type":"string","enum":["off","messages","verbose"],"default":"off"},"format":{"type":"string","enum":["text","json"],"default":"text"}}}],"default":"off","description":"Traces the communication between VSCode and the eslint linter service."},"eslint.run":{"scope":"resource","type":"string","enum":["onSave","onType"],"default":"onType","description":"Run the linter on save (onSave) or on type (onType)"},"eslint.autoFixOnSave":{"scope":"resource","type":"boolean","default":false,"description":"Turns auto fix on save on or off."},"eslint.workingDirectories":{"scope":"resource","type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"directory":{"type":"string","description":"The working directory to use if a file's path start with this directory."},"changeProcessCWD":{"type":"boolean","description":"Whether the process's cwd should be changed as well."}}}]}},"eslint.validate":{"scope":"resource","type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"language":{"type":"string","description":"The language id to be validated by ESLint"},"autoFix":{"type":"boolean","description":"Whether auto fixes are provided for the language"}}}]},"default":["javascript","javascriptreact"],"description":"An array of language ids which should be validated by ESLint"},"eslint.provideLintTask":{"scope":"resource","type":"boolean","default":false,"description":"Controls whether a task for linting the whole workspace will be available."},"eslint.runtime":{"scope":"window","type":["string","null"],"default":null,"description":"The location of the node binary to run ESLint under."},"eslint.codeAction.disableRuleComment":{"scope":"resource","type":"object","default":{"enable":true,"location":"newLine"},"properties":{"enable":{"type":"boolean","default":true,"description":"Show the disable code actions."},"location":{"type":"string","enum":["separateLine","sameLine"],"default":"newLine","description":"Configure the disable rule code action to insert the comment on the same line or a new line."}}},"eslint.codeAction.showDocumentation":{"scope":"resource","type":"object","default":{"enable":true},"properties":{"enable":{"type":"boolean","default":true,"description":"Show the documentation code actions."}}}}},"commands":[{"title":"Fix all auto-fixable Problems","category":"ESLint","command":"eslint.executeAutofix"},{"title":"Create ESLint configuration","category":"ESLint","command":"eslint.createConfig"},{"title":"Enable ESLint","category":"ESLint","command":"eslint.enable"},{"title":"Disable ESLint","category":"ESLint","command":"eslint.disable"},{"title":"Show Output Channel","category":"ESLint","command":"eslint.showOutputChannel"}],"jsonValidation":[{"fileMatch":".eslintrc","url":"http://json.schemastore.org/eslintrc"},{"fileMatch":".eslintrc.json","url":"http://json.schemastore.org/eslintrc"}],"languages":[{"id":"ignore","filenames":[".eslintignore"]}]},"scripts":{"vscode:prepublish":"cd client && npm run update-vscode && cd .. && npm run webpack","webpack":"npm run clean && webpack --mode production --config ./client/webpack.config.js && webpack --mode production --config ./server/webpack.config.js","webpack:dev":"npm run clean && webpack --mode none --config ./client/webpack.config.js && webpack --mode none --config ./server/webpack.config.js","compile":"tsc -b","compile:client":"tsc -b ./client/tsconfig.json","compile:server":"tsc -b ./server/tsconfig.json","watch":"tsc -b -w","clean":"rimraf client/out && rimraf server/out","postinstall":"cd client && npm install && cd ../server && npm install && cd .."},"devDependencies":{"typescript":"^3.2.4","@types/node":"^8.0.0","tslint":"^5.11.0","webpack":"^4.29.6","webpack-cli":"^3.2.3","ts-loader":"^5.3.3","merge-options":"^1.0.1","rimraf":"^2.6.3"},"uuid":"583b2b34-2c1e-4634-8c0b-0b82e283ea3a","isBuiltin":false,"isUnderDevelopment":false,"id":"dbaeumer.vscode-eslint","identifier":{"value":"dbaeumer.vscode-eslint","_lower":"dbaeumer.vscode-eslint"},"extensionLocation":{"$mid":1,"fsPath":"/home/miri/.vscode/extensions/dbaeumer.vscode-eslint-1.8.2","path":"/home/miri/.vscode/extensions/dbaeumer.vscode-eslint-1.8.2","scheme":"file"}},{"name":"gitlens","displayName":"GitLens — Git supercharged","description":"Supercharge the Git capabilities built into Visual Studio Code — Visualize code authorship at a glance via Git blame annotations and code lens, seamlessly navigate and explore Git repositories, gain valuable insights via powerful comparison commands, and so much more","version":"9.5.1","author":{"name":"Eric Amodio","email":"eamodio@gmail.com"},"publisher":"eamodio","license":"SEE LICENSE IN LICENSE","homepage":"https://github.com/eamodio/vscode-gitlens/blob/master/README.md","bugs":{"url":"https://github.com/eamodio/vscode-gitlens/issues"},"repository":{"type":"git","url":"https://github.com/eamodio/vscode-gitlens.git"},"engines":{"vscode":"^1.30.0"},"main":"/home/miri/.vscode/extensions/eamodio.gitlens-9.5.1/dist/extension","icon":"images/gitlens-icon.png","preview":false,"badges":[{"url":"https://img.shields.io/badge/vscode--dev--community-gitlens-blue.svg?logo=slack","href":"https://join.slack.com/t/vscode-dev-community/shared_invite/enQtMjIxOTgxNDE3NzM0LWU5M2ZiZDU1YjBlMzdlZjA2YjBjYzRhYTM5NTgzMTAxMjdiNWU0ZmQzYWI3MWU5N2Q1YjBiYmQ4MzY0NDE1MzY","description":"Join us in the #gitlens channel"}],"categories":["Other"],"galleryBanner":{"color":"#8647ae","theme":"dark"},"keywords":["gitlens","git","blame","log","annotation","multi-root ready"],"activationEvents":["*"],"contributes":{"configuration":{"type":"object","title":"GitLens","properties":{"gitlens.blame.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in the gutter blame annotations","scope":"window"},"gitlens.blame.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (deduplicate) matching adjacent gutter blame annotations","scope":"window"},"gitlens.blame.dateFormat":{"type":"string","default":null,"markdownDescription":"Specifies how to format absolute dates (using the `${date}` token) in gutter blame annotations. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.blame.format":{"type":"string","default":"${message|40?} ${agoOrDate|14-}","markdownDescription":"Specifies the format of the gutter blame annotations. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.blame.dateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`","scope":"window"},"gitlens.blame.heatmap.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a heatmap indicator in the gutter blame annotations","scope":"window"},"gitlens.blame.heatmap.location":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Adds a heatmap indicator on the left edge of the gutter blame annotations","Adds a heatmap indicator on the right edge of the gutter blame annotations"],"markdownDescription":"Specifies where the heatmap indicators will be shown in the gutter blame annotations","scope":"window"},"gitlens.blame.highlight.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to highlight lines associated with the current line","scope":"window"},"gitlens.blame.highlight.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds a gutter glyph","Adds a full-line highlight background color","Adds a decoration to the overview ruler (scroll bar)"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the associated line highlights will be shown","scope":"window"},"gitlens.blame.ignoreWhitespace":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to ignore whitespace when comparing revisions during blame operations","scope":"resource"},"gitlens.blame.separateLines":{"type":"boolean","default":true,"markdownDescription":"Specifies whether gutter blame annotations will be separated by a small gap","scope":"window"},"gitlens.blame.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the gutter blame annotations will be toggled","scope":"window"},"gitlens.codeLens.authors.command":{"type":"string","default":"gitlens.toggleFileBlame","enum":["gitlens.toggleFileBlame","gitlens.diffWithPrevious","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory"],"enumDescriptions":["Toggles file blame annotations","Compares the current committed file with the previous commit","Shows a commit details quick pick","Shows a commit file details quick pick","Shows a file history quick pick","Shows a branch history quick pick"],"markdownDescription":"Specifies the command to be executed when an _authors_ code lens is clicked","scope":"window"},"gitlens.codeLens.authors.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide an _authors_ code lens, showing number of authors of the file or code block and the most prominent author (if there is more than one)","scope":"window"},"gitlens.codeLens.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any Git code lens, by default. Use the `Toggle Git Code Lens` command (`gitlens.toggleCodeLens`) to toggle the Git code lens on and off for the current window","scope":"window"},"gitlens.codeLens.includeSingleLineSymbols":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to provide any Git code lens on symbols that span only a single line","scope":"window"},"gitlens.codeLens.recentChange.command":{"type":"string","default":"gitlens.showQuickCommitFileDetails","enum":["gitlens.toggleFileBlame","gitlens.diffWithPrevious","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory"],"enumDescriptions":["Toggles file blame annotations","Compares the current committed file with the previous commit","Shows a commit details quick pick","Shows a commit file details quick pick","Shows a file history quick pick","Shows a branch history quick pick"],"markdownDescription":"Specifies the command to be executed when a _recent change_ code lens is clicked","scope":"window"},"gitlens.codeLens.recentChange.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _recent change_ code lens, showing the author and date of the most recent commit for the file or code block","scope":"window"},"gitlens.codeLens.scopes":{"type":"array","default":["document","containers"],"items":{"type":"string","enum":["document","containers","blocks"],"enumDescriptions":["Adds code lens at the top of the document","Adds code lens at the start of container-like symbols (modules, classes, interfaces, etc)","Adds code lens at the start of block-like symbols (functions, methods, etc) lines"]},"minItems":1,"maxItems":4,"uniqueItems":true,"markdownDescription":"Specifies where Git code lens will be shown in the document","scope":"resource"},"gitlens.codeLens.scopesByLanguage":{"type":"array","default":[{"language":"azure-pipelines","scopes":["document"]},{"language":"css","scopes":["document"]},{"language":"html","scopes":["document"]},{"language":"json","scopes":["document"]},{"language":"jsonc","scopes":["document"]},{"language":"less","scopes":["document"]},{"language":"postcss","scopes":["document"]},{"language":"python","symbolScopes":["!Module"]},{"language":"scss","scopes":["document"]},{"language":"stylus","scopes":["document"]},{"language":"vue","scopes":["document"]},{"language":"yaml","scopes":["document"]}],"items":{"type":"object","required":["language"],"properties":{"language":{"type":"string","description":"Specifies the language to which this code lens override applies"},"scopes":{"type":"array","default":["document","containers"],"items":{"type":"string","enum":["document","containers","blocks","custom"],"enumDescriptions":["Adds code lens at the top of the document","Adds code lens at the start of container-like symbols (modules, classes, interfaces, etc)","Adds code lens at the start of block-like symbols (functions, methods, properties, etc) lines","Adds code lens at the start of symbols contained in `symbolScopes`"]},"minItems":1,"maxItems":4,"uniqueItems":true,"description":"Specifies where Git code lens will be shown in the document for the specified language"},"symbolScopes":{"type":"array","items":{"type":"string"},"uniqueItems":true,"description":"Specifies the set of document symbols where Git code lens will be shown in the document for the specified language. Must be a member of `SymbolKind`"}}},"uniqueItems":true,"markdownDescription":"Specifies where Git code lens will be shown in the document for the specified languages","scope":"resource"},"gitlens.codeLens.symbolScopes":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"Specifies a set of document symbols where Git code lens will or will not be shown in the document. Prefix with `!` to avoid providing a Git code lens for the symbol. Must be a member of `SymbolKind`","scope":"resource"},"gitlens.currentLine.dateFormat":{"type":"string","default":null,"markdownDescription":"Specifies how to format absolute dates (using the `${date}` token) for the current line blame annotation. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.currentLine.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a blame annotation for the current line, by default. Use the `Toggle Line Blame Annotations` command (`gitlens.toggleLineBlame`) to toggle the annotations on and off for the current window","scope":"window"},"gitlens.currentLine.format":{"type":"string","default":"${authorAgoOrDate} • ${message}","markdownDescription":"Specifies the format of the current line blame annotation. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.currentLine.dateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`","scope":"window"},"gitlens.currentLine.scrollable":{"type":"boolean","default":true,"markdownDescription":"Specifies whether the current line blame annotation can be scrolled into view when it is outside the viewport","scope":"window"},"gitlens.debug":{"type":"boolean","default":false,"markdownDescription":"Specifies debug mode","scope":"window"},"gitlens.defaultDateFormat":{"type":"string","default":null,"markdownDescription":"Specifies how absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.defaultDateShortFormat":{"type":"string","default":null,"markdownDescription":"Specifies how short absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.defaultDateStyle":{"type":"string","default":"relative","enum":["relative","absolute"],"enumDescriptions":["e.g. 1 day ago","e.g. July 25th, 2018 7:18pm"],"markdownDescription":"Specifies how dates will be displayed by default","scope":"window"},"gitlens.defaultGravatarsStyle":{"type":"string","default":"robohash","enum":["identicon","mp","monsterid","retro","robohash","wavatar"],"enumDescriptions":["A geometric pattern","A simple, cartoon-style silhouetted outline of a person (does not vary by email hash)","A monster with different colors, faces, etc","8-bit arcade-style pixelated faces","A robot with different colors, faces, etc","A face with differing features and backgrounds"],"markdownDescription":"Specifies the style of the gravatar default (fallback) images","scope":"window"},"gitlens.heatmap.ageThreshold":{"type":"string","default":"90","markdownDescription":"Specifies the age of the most recent change (in days) after which the gutter heatmap annotations will be cold rather than hot (i.e. will use `#gitlens.heatmap.coldColor#` instead of `#gitlens.heatmap.hotColor#`)","scope":"window"},"gitlens.heatmap.coldColor":{"type":"string","default":"#0a60f6","markdownDescription":"Specifies the base color of the gutter heatmap annotations when the most recent change is older (cold) than the `#gitlens.heatmap.ageThreshold#` value","scope":"window"},"gitlens.heatmap.hotColor":{"type":"string","default":"#f66a0a","markdownDescription":"Specifies the base color of the gutter heatmap annotations when the most recent change is newer (hot) than the `#gitlens.heatmap.ageThreshold#` value","scope":"window"},"gitlens.heatmap.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the gutter heatmap annotations will be toggled","scope":"window"},"gitlens.hovers.annotations.changes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _changes (diff)_ hover for all lines when showing blame annotations","scope":"window"},"gitlens.hovers.annotations.details":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _commit details_ hover for all lines when showing blame annotations","scope":"window"},"gitlens.hovers.annotations.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers when showing blame annotations","scope":"window"},"gitlens.hovers.annotations.over":{"type":"string","default":"line","enum":["annotation","line"],"enumDescriptions":["Only shown when hovering over the line annotation","Shown when hovering anywhere over the line"],"markdownDescription":"Specifies when to trigger hovers when showing blame annotations","scope":"window"},"gitlens.hovers.currentLine.changes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _changes (diff)_ hover for the current line","scope":"window"},"gitlens.hovers.currentLine.details":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _commit details_ hover for the current line","scope":"window"},"gitlens.hovers.currentLine.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers for the current line","scope":"window"},"gitlens.hovers.currentLine.over":{"type":"string","default":"annotation","enum":["annotation","line"],"enumDescriptions":["Only shown when hovering over the line annotation","Shown when hovering anywhere over the line"],"markdownDescription":"Specifies when to trigger hovers for the current line","scope":"window"},"gitlens.hovers.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in hovers","scope":"window"},"gitlens.hovers.detailsMarkdownFormat":{"type":"string","default":"[${avatar} &nbsp;__${author}__](mailto:${email}), ${ago} &nbsp; _(${date})_ ${message}\n\n${commands}","markdownDescription":"Specifies the format (in markdown) of the _commit details_ hover. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.defaultDateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`\n - `${avatar}` &mdash; commit author avatar\n - `${commands}` &mdash; a set of commit commands","scope":"window"},"gitlens.hovers.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers","scope":"window"},"gitlens.insiders":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to enable experimental features","scope":"window"},"gitlens.keymap":{"type":"string","default":"chorded","enum":["alternate","chorded","none"],"enumDescriptions":["Adds an alternate set of shortcut keys that start with `Alt` (⌥ on macOS)","Adds a chorded set of shortcut keys that start with `Ctrl+Alt+G` (`⌥⌘G` on macOS)","No shortcut keys will be added"],"markdownDescription":"Specifies the keymap to use for GitLens shortcut keys","scope":"window"},"gitlens.liveshare.allowGuestAccess":{"type":"boolean","default":true,"description":"Specifies whether to allow guest access to GitLens features when using Visual Studio Live Share","scope":"window"},"gitlens.menus":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"editor":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"blame":{"type":"boolean"},"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"details":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"editorGroup":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"blame":{"type":"boolean"},"compare":{"type":"boolean"}}}]},"editorTab":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"explorer":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"scmGroup":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"compare":{"type":"boolean"},"openClose":{"type":"boolean"},"stash":{"type":"boolean"},"stashInline":{"type":"boolean"}}}]},"scmItem":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"},"stash":{"type":"boolean"}}}]}}}],"default":{"editor":{"blame":false,"clipboard":true,"compare":true,"details":false,"history":false,"remote":false},"editorGroup":{"blame":true,"compare":true},"editorTab":{"clipboard":true,"compare":true,"history":true,"remote":true},"explorer":{"clipboard":true,"compare":true,"history":true,"remote":true},"scmGroup":{"compare":true,"openClose":true,"stash":true,"stashInline":true},"scmItem":{"clipboard":true,"compare":true,"history":true,"remote":true,"stash":true}},"markdownDescription":"Specifies which commands will be added to which menus","scope":"window"},"gitlens.mode.active":{"type":"string","markdownDescription":"Specifies the active GitLens mode, if any","scope":"window"},"gitlens.mode.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide the active GitLens mode in the status bar","scope":"window"},"gitlens.mode.statusBar.alignment":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Aligns to the left","Aligns to the right"],"markdownDescription":"Specifies the active GitLens mode alignment in the status bar","scope":"window"},"gitlens.modes":{"type":"object","properties":{"zen":{"type":"object","properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git code lens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show a blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"},"views":{"type":"boolean","description":"Specifies whether to show any GitLens views when this user-defined mode is active"}}},"review":{"type":"object","properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git code lens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show a blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"},"views":{"type":"boolean","description":"Specifies whether to show any GitLens views when this user-defined mode is active"}}}},"additionalProperties":{"type":"object","required":["name"],"properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"annotations":{"type":"string","enum":["blame","heatmap","recentChanges"],"enumDescriptions":["Shows the gutter blame annotations","Shows the gutter heatmap annotations","Shows the recently changed lines annotations"],"description":"Specifies which (if any) file annotations will be shown when this user-defined mode is active"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git code lens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show a blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"},"views":{"type":"boolean","description":"Specifies whether to show any GitLens views when this user-defined mode is active"}}},"default":{"zen":{"name":"Zen","statusBarItemName":"Zen","description":"for a zen-like experience, disables many visual features","codeLens":false,"currentLine":false,"hovers":false,"statusBar":false},"review":{"name":"Review","statusBarItemName":"Reviewing","description":"for reviewing code, enables many visual features","codeLens":true,"currentLine":true,"hovers":true}},"markdownDescription":"Specifies the user-defined GitLens modes","scope":"window"},"gitlens.outputLevel":{"type":"string","default":"errors","enum":["silent","errors","verbose","debug"],"enumDescriptions":["Logs nothing","Logs only errors","Logs all errors, warnings, and messages","Logs all errors, warnings, and messages with extra context useful for debugging"],"markdownDescription":"Specifies how much (if any) output will be sent to the GitLens output channel","scope":"window"},"gitlens.recentChanges.highlight.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds a gutter glyph","Adds a full-line highlight background color","Adds a decoration to the overview ruler (scroll bar)"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the highlights of the recently changed lines will be shown","scope":"window"},"gitlens.recentChanges.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the recently changed lines annotations will be toggled","scope":"window"},"gitlens.remotes":{"type":"array","default":null,"items":{"type":"object","required":["type","domain"],"properties":{"type":{"type":"string","enum":["Bitbucket","BitbucketServer","Custom","GitHub","GitLab"],"description":"Specifies the type of the custom remote service"},"domain":{"type":"string","description":"Specifies the domain name of the custom remote service"},"name":{"type":"string","description":"Specifies an optional friendly name for the custom remote service"},"protocol":{"type":"string","default":"https","description":"Specifies an optional url protocol for the custom remote service"},"urls":{"type":"object","required":["repository","branches","branch","commit","file","fileInCommit","fileInBranch","fileLine","fileRange"],"properties":{"repository":{"type":"string","description":"Specifies the format of a respository url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path"},"branches":{"type":"string","description":"Specifies the format of a branches url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${branch}` &mdash; branch"},"branch":{"type":"string","description":"Specifies the format of a branch url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${branch}` &mdash; branch"},"commit":{"type":"string","description":"Specifies the format of a commit url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${id}` &mdash; commit id"},"file":{"type":"string","description":"Specifies the format of a file url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${file}` &mdash; file name\n ${line}` &mdash; formatted line information"},"fileInBranch":{"type":"string","description":"Specifies the format of a branch file url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${file}` &mdash; file name\n ${branch}` &mdash; branch\n ${line}` &mdash; formatted line information"},"fileInCommit":{"type":"string","description":"Specifies the format of a commit file url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${file}` &mdash; file name\n ${id}` &mdash; commit id\n ${line}` &mdash; formatted line information"},"fileLine":{"type":"string","description":"Specifies the format of a line in a file url for the custom remote service\nAvailable tokens\n ${line}` &mdash; line"},"fileRange":{"type":"string","description":"Specifies the format of a range in a file url for the custom remote service\nAvailable tokens\n ${start}` &mdash; starting line\n ${end}` &mdash; ending line"}}},"description":"Specifies the url formats of the custom remote service"}},"uniqueItems":true,"markdownDescription":"Specifies user-defined remote (code-hosting) services or custom domains for built-in remote services","scope":"resource"},"gitlens.settings.mode":{"type":"string","default":"simple","enum":["simple","advanced"],"enumDescriptions":["Only displays common settings","Displays all settings"],"markdownDescription":"Specifies the display mode of the interactive settings editor","scope":"window"},"gitlens.showWhatsNewAfterUpgrades":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show What's New after upgrading to new feature releases","scope":"window"},"gitlens.statusBar.alignment":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Aligns to the left","Aligns to the right"],"markdownDescription":"Specifies the blame alignment in the status bar","scope":"window"},"gitlens.statusBar.command":{"type":"string","default":"gitlens.showQuickCommitDetails","enum":["gitlens.toggleFileBlame","gitlens.diffWithPrevious","gitlens.diffWithWorking","gitlens.toggleCodeLens","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory"],"enumDescriptions":["Toggles file blame annotations","Compares the current line commit with the previous","Compares the current line commit with the working tree","Toggles Git code lens","Shows a commit details quick pick","Shows a commit file details quick pick","Shows a file history quick pick","Shows a branch history quick pick"],"markdownDescription":"Specifies the command to be executed when the blame status bar item is clicked","scope":"window"},"gitlens.statusBar.dateFormat":{"type":"string","default":null,"markdownDescription":"Specifies the date format of absolute dates shown in the blame information in the status bar. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide blame information in the status bar","scope":"window"},"gitlens.statusBar.format":{"type":"string","default":"${authorAgoOrDate}","markdownDescription":"Specifies the format of the gutter blame annotations. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.statusBar.dateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`","scope":"window"},"gitlens.statusBar.reduceFlicker":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to avoid clearing the previous blame information when changing lines to reduce status bar \"flashing\"","scope":"window"},"gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors":{"type":"string","default":"Unsaved changes (cannot determine recent change or authors)","markdownDescription":"Specifies the string to be shown in place of both the _recent change_ and _authors_ code lens when there are unsaved changes","scope":"window"},"gitlens.strings.codeLens.unsavedChanges.recentChangeOnly":{"type":"string","default":"Unsaved changes (cannot determine recent change)","markdownDescription":"Specifies the string to be shown in place of the _recent change_ code lens when there are unsaved changes","scope":"window"},"gitlens.strings.codeLens.unsavedChanges.authorsOnly":{"type":"string","default":"Unsaved changes (cannot determine authors)","markdownDescription":"Specifies the string to be shown in place of the _authors_ code lens when there are unsaved changes","scope":"window"},"gitlens.views.commitFileFormat":{"type":"string","default":"${file}","markdownDescription":"Specifies the format of a committed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path","scope":"window"},"gitlens.views.commitFileDescriptionFormat":{"type":"string","default":"${directory}","markdownDescription":"Specifies the description format of a committed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path","scope":"window"},"gitlens.views.commitFormat":{"type":"string","default":"${message}","markdownDescription":"Specifies the format of committed changes in the views. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.defaultDateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`","scope":"window"},"gitlens.views.commitDescriptionFormat":{"type":"string","default":"${changes  •  }${authorAgoOrDate}","markdownDescription":"Specifies the description format of committed changes in the views. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.defaultDateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`","scope":"window"},"gitlens.views.compare.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Compare_ view","scope":"window"},"gitlens.views.compare.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Compare_ view","scope":"window"},"gitlens.views.compare.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Compare_ view. Only applies when `#gitlens.views.compare.files.layout#` is set to `tree` or `auto`","scope":"window"},"gitlens.views.compare.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.compare.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Compare_ view will display files","scope":"window"},"gitlens.views.compare.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Compare_ view. Only applies when `#gitlens.views.compare.files.layout#` is set to `auto`","scope":"window"},"gitlens.views.compare.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _Compare_ view","scope":"window"},"gitlens.views.defaultItemLimit":{"type":"number","default":10,"markdownDescription":"Specifies the default number of items to show in a view list. Use 0 to specify no limit","scope":"window"},"gitlens.views.fileHistory.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of status icons in the _File History_ view","scope":"window"},"gitlens.views.fileHistory.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _File History_ view","scope":"window"},"gitlens.views.fileHistory.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _File History_ view","scope":"window"},"gitlens.views.lineHistory.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of status icons in the _Line History_ view","scope":"window"},"gitlens.views.lineHistory.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Line History_ view","scope":"window"},"gitlens.views.lineHistory.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _Line History_ view","scope":"window"},"gitlens.views.repositories.autoRefresh":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically refresh the _Repositories_ view when the repository or the file system changes","scope":"window"},"gitlens.views.repositories.autoReveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically reveal repositories in the _Repositories_ view when opening files","scope":"window"},"gitlens.views.repositories.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Repositories_ view","scope":"window"},"gitlens.views.repositories.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _Repositories_ view will display branches","scope":"window"},"gitlens.views.repositories.compact":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the _Repositories_ view in a compact display density","scope":"window"},"gitlens.views.repositories.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Repositories_ view","scope":"window"},"gitlens.views.repositories.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `tree` or `auto`","scope":"window"},"gitlens.views.repositories.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.repositories.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Repositories_ view will display files","scope":"window"},"gitlens.views.repositories.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `auto`","scope":"window"},"gitlens.views.repositories.includeWorkingTree":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to include working tree file status for each repository in the _Repositories_ view","scope":"window"},"gitlens.views.repositories.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _Repositories_ view","scope":"window"},"gitlens.views.repositories.showTrackingBranch":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the tracking branch when displaying local branches in the _Repositories_ view","scope":"window"},"gitlens.views.search.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Search Commits_ view","scope":"window"},"gitlens.views.search.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Search Commits_ view","scope":"window"},"gitlens.views.search.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Search Commits_ view. Only applies when `#gitlens.views.search.files.layout#` is set to `tree` or `auto`","scope":"window"},"gitlens.views.search.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.search.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Search Commits_ view will display files","scope":"window"},"gitlens.views.search.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Search Commits_ view. Only applies when `#gitlens.views.search.files.layout#` is set to `auto`","scope":"window"},"gitlens.views.search.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _Search Commits_ view","scope":"window"},"gitlens.views.showRelativeDateMarkers":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show relative date markers (_Less than a week ago_, _Over a week ago_, _Over a month ago_, etc) on revision (commit) histories in the views","scope":"window"},"gitlens.views.stashFileFormat":{"type":"string","default":"${file}","markdownDescription":"Specifies the format of a stashed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path","scope":"window"},"gitlens.views.stashFileDescriptionFormat":{"type":"string","default":"${directory}","markdownDescription":"Specifies the description format of a stashed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path","scope":"window"},"gitlens.views.stashFormat":{"type":"string","default":"${message}","markdownDescription":"Specifies the format of stashed changes in the views. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.defaultDateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`","scope":"window"},"gitlens.views.stashDescriptionFormat":{"type":"string","default":"${changes  •  }${agoOrDate}","markdownDescription":"Specifies the description format of stashed changes in the views. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.defaultDateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`","scope":"window"},"gitlens.views.statusFileFormat":{"type":"string","default":"${working  }${file}","markdownDescription":"Specifies the format of the status of a working or committed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path\n - `${working}` &mdash; optional indicator if the file is uncommitted","scope":"window"},"gitlens.views.statusFileDescriptionFormat":{"type":"string","default":"${directory}","markdownDescription":"Specifies the description format of the status of a working or committed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path\n - `${working}` &mdash; optional indicator if the file is uncommitted","scope":"window"},"gitlens.advanced.abbreviatedShaLength":{"type":"number","default":"7","markdownDescription":"Specifies the length of abbreviated commit ids (shas)","scope":"window"},"gitlens.advanced.blame.customArguments":{"type":"array","default":null,"items":{"type":"string"},"markdownDescription":"Specifies additional arguments to pass to the `git blame` command","scope":"resource"},"gitlens.advanced.blame.delayAfterEdit":{"type":"number","default":5000,"markdownDescription":"Specifies the time (in milliseconds) to wait before re-blaming an unsaved document after an edit. Use 0 to specify an infinite wait","scope":"window"},"gitlens.advanced.blame.sizeThresholdAfterEdit":{"type":"number","default":5000,"markdownDescription":"Specifies the maximum document size (in lines) allowed to be re-blamed after an edit while still unsaved. Use 0 to specify no maximum","scope":"window"},"gitlens.advanced.caching.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether git output will be cached — changing the default is not recommended","scope":"window"},"gitlens.advanced.fileHistoryFollowsRenames":{"type":"boolean","default":true,"markdownDescription":"Specifies whether file histories will follow renames — will affect how merge commits are shown in histories","scope":"window"},"gitlens.advanced.maxListItems":{"type":"number","default":200,"markdownDescription":"Specifies the maximum number of items to show in a list. Use 0 to specify no maximum","scope":"window"},"gitlens.advanced.messages":{"type":"object","default":{"suppressCommitHasNoPreviousCommitWarning":false,"suppressCommitNotFoundWarning":false,"suppressFileNotUnderSourceControlWarning":false,"suppressGitDisabledWarning":false,"suppressGitVersionWarning":false,"suppressLineUncommittedWarning":false,"suppressNoRepositoryWarning":false,"suppressSupportGitLensNotification":false},"properties":{"suppressCommitHasNoPreviousCommitWarning":{"type":"boolean","default":false},"suppressCommitNotFoundWarning":{"type":"boolean","default":false},"suppressFileNotUnderSourceControlWarning":{"type":"boolean","default":false},"suppressGitDisabledWarning":{"type":"boolean","default":false},"suppressGitVersionWarning":{"type":"boolean","default":false},"suppressLineUncommittedWarning":{"type":"boolean","default":false},"suppressNoRepositoryWarning":{"type":"boolean","default":false},"suppressSupportGitLensNotification":{"type":"boolean","default":false}},"markdownDescription":"Specifies which messages should be suppressed","scope":"window"},"gitlens.advanced.quickPick.closeOnFocusOut":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to close QuickPick menus when focus is lost","scope":"window"},"gitlens.advanced.repositorySearchDepth":{"type":"number","default":1,"markdownDescription":"Specifies how many folders deep to search for repositories","scope":"resource"},"gitlens.advanced.telemetry.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable GitLens telemetry (even if enabled still abides by the overall `#telemetry.enableTelemetry#` setting","scope":"window"}}},"colors":[{"id":"gitlens.gutterBackgroundColor","description":"Specifies the background color of the gutter blame annotations","defaults":{"dark":"#FFFFFF13","light":"#0000000C","highContrast":"#FFFFFF13"}},{"id":"gitlens.gutterForegroundColor","description":"Specifies the foreground color of the gutter blame annotations","defaults":{"dark":"#BEBEBE","light":"#747474","highContrast":"#BEBEBE"}},{"id":"gitlens.gutterUncommittedForegroundColor","description":"Specifies the foreground color of an uncommitted line in the gutter blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF2FF"}},{"id":"gitlens.trailingLineBackgroundColor","description":"Specifies the background color of the blame annotation for the current line","defaults":{"dark":"#00000000","light":"#00000000","highContrast":"#00000000"}},{"id":"gitlens.trailingLineForegroundColor","description":"Specifies the foreground color of the blame annotation for the current line","defaults":{"dark":"#99999959","light":"#99999959","highContrast":"#99999999"}},{"id":"gitlens.lineHighlightBackgroundColor","description":"Specifies the background color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF233","light":"#00BCF233","highContrast":"#00BCF233"}},{"id":"gitlens.lineHighlightOverviewRulerColor","description":"Specifies the overview ruler color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF299"}}],"commands":[{"command":"gitlens.supportGitLens","title":"Support GitLens ❤","category":"GitLens","icon":{"dark":"images/dark/icon-heart.svg","light":"images/light/icon-heart.svg"}},{"command":"gitlens.showSettingsPage","title":"Open Settings","category":"GitLens","icon":{"dark":"images/dark/icon-gear.svg","light":"images/light/icon-gear.svg"}},{"command":"gitlens.showWelcomePage","title":"Welcome","category":"GitLens"},{"command":"gitlens.showCompareView","title":"Show Compare View","category":"GitLens"},{"command":"gitlens.showFileHistoryView","title":"Show File History View","category":"GitLens"},{"command":"gitlens.showLineHistoryView","title":"Show Line History View","category":"GitLens"},{"command":"gitlens.showRepositoriesView","title":"Show Repositories View","category":"GitLens"},{"command":"gitlens.showSearchView","title":"Show Search Commits View","category":"GitLens"},{"command":"gitlens.diffDirectory","title":"Directory Compare Working Tree with...","category":"GitLens"},{"command":"gitlens.diffDirectoryWithHead","title":"Directory Compare All Changes","category":"GitLens"},{"command":"gitlens.diffHeadWithBranch","title":"Compare HEAD with Branch or Tag...","category":"GitLens"},{"command":"gitlens.diffWorkingWithBranch","title":"Compare Working Tree with Branch or Tag...","category":"GitLens"},{"command":"gitlens.diffWithBranch","title":"Open Changes with Branch or Tag...","category":"GitLens"},{"command":"gitlens.diffWithNext","title":"Open Changes with Next Revision","category":"GitLens","icon":{"dark":"images/dark/icon-next-commit.svg","light":"images/light/icon-next-commit.svg"}},{"command":"gitlens.diffWithPrevious","title":"Open Changes with Previous Revision","category":"GitLens","icon":{"dark":"images/dark/icon-prev-commit.svg","light":"images/light/icon-prev-commit.svg"}},{"command":"gitlens.diffWithPreviousInDiff","title":"Open Changes with Previous Revision","category":"GitLens","icon":{"dark":"images/dark/icon-prev-commit.svg","light":"images/light/icon-prev-commit.svg"}},{"command":"gitlens.diffLineWithPrevious","title":"Open Line Changes with Previous Revision","category":"GitLens"},{"command":"gitlens.diffWithRevision","title":"Open Changes with Revision...","category":"GitLens","icon":{"dark":"images/dark/icon-prev-commit-menu.svg","light":"images/light/icon-prev-commit-menu.svg"}},{"command":"gitlens.diffWithWorking","title":"Open Changes with Working File","category":"GitLens","icon":{"dark":"images/dark/icon-compare-ref-working.svg","light":"images/light/icon-compare-ref-working.svg"}},{"command":"gitlens.diffLineWithWorking","title":"Open Line Changes with Working File","category":"GitLens"},{"command":"gitlens.toggleFileBlame","title":"Toggle File Blame Annotations","category":"GitLens","icon":{"dark":"images/dark/icon-git.svg","light":"images/light/icon-git.svg"}},{"command":"gitlens.clearFileAnnotations","title":"Clear File Annotations","category":"GitLens","icon":{"dark":"images/dark/icon-git-orange.svg","light":"images/light/icon-git-orange.svg"}},{"command":"gitlens.computingFileAnnotations","title":"Computing File Annotations...","category":"GitLens","icon":{"dark":"images/dark/icon-git-progress.svg","light":"images/light/icon-git-progress.svg"}},{"command":"gitlens.toggleFileHeatmap","title":"Toggle File Heatmap Annotations","category":"GitLens","icon":{"dark":"images/dark/icon-git.svg","light":"images/light/icon-git.svg"}},{"command":"gitlens.toggleFileRecentChanges","title":"Toggle Recent File Changes Annotations","category":"GitLens","icon":{"dark":"images/dark/icon-git.svg","light":"images/light/icon-git.svg"}},{"command":"gitlens.toggleLineBlame","title":"Toggle Line Blame Annotations","category":"GitLens"},{"command":"gitlens.toggleCodeLens","title":"Toggle Git Code Lens","category":"GitLens"},{"command":"gitlens.switchMode","title":"Switch Mode","category":"GitLens"},{"command":"gitlens.toggleReviewMode","title":"Toggle Review Mode","category":"GitLens"},{"command":"gitlens.toggleZenMode","title":"Toggle Zen Mode","category":"GitLens"},{"command":"gitlens.showCommitSearch","title":"Search Commits","category":"GitLens","icon":{"dark":"images/dark/icon-search.svg","light":"images/light/icon-search.svg"}},{"command":"gitlens.showLastQuickPick","title":"Show Last Opened Quick Pick","category":"GitLens"},{"command":"gitlens.showCommitInView","title":"Show Commit in View","category":"GitLens"},{"command":"gitlens.showFileHistoryInView","title":"Show File History in View","category":"GitLens"},{"command":"gitlens.showQuickCommitDetails","title":"Show Commit Details","category":"GitLens"},{"command":"gitlens.showQuickCommitFileDetails","title":"Show Commit Details","category":"GitLens"},{"command":"gitlens.showQuickRevisionDetails","title":"Show Revision Details","category":"GitLens","icon":{"dark":"images/dark/icon-commit.svg","light":"images/light/icon-commit.svg"}},{"command":"gitlens.showQuickFileHistory","title":"Show File History","category":"GitLens"},{"command":"gitlens.showQuickBranchHistory","title":"Show Branch History","category":"GitLens"},{"command":"gitlens.showQuickRepoHistory","title":"Show Current Branch History","category":"GitLens"},{"command":"gitlens.showQuickRepoStatus","title":"Show Repository Status","category":"GitLens"},{"command":"gitlens.showQuickStashList","title":"Show Stashed Changes","category":"GitLens"},{"command":"gitlens.copyMessageToClipboard","title":"Copy Commit Message to Clipboard","category":"GitLens","icon":{"dark":"images/dark/icon-clipboard.svg","light":"images/light/icon-clipboard.svg"}},{"command":"gitlens.copyRemoteFileUrlToClipboard","title":"Copy Remote Url to Clipboard","category":"GitLens","icon":{"dark":"images/dark/icon-copy-remote.svg","light":"images/light/icon-copy-remote.svg"}},{"command":"gitlens.copyShaToClipboard","title":"Copy Commit ID to Clipboard","category":"GitLens","icon":{"dark":"images/dark/icon-copy-commit.svg","light":"images/light/icon-copy-commit.svg"}},{"command":"gitlens.closeUnchangedFiles","title":"Close Unchanged Files","category":"GitLens"},{"command":"gitlens.openChangedFiles","title":"Open Changed Files","category":"GitLens"},{"command":"gitlens.openBranchesInRemote","title":"Open Branches on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openBranchInRemote","title":"Open Branch on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openCommitInRemote","title":"Open Commit on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openFileInRemote","title":"Open File on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openFileRevision","title":"Open Revision...","category":"GitLens"},{"command":"gitlens.openFileRevisionFromBranch","title":"Open Revision from Branch or Tag...","category":"GitLens"},{"command":"gitlens.openRepoInRemote","title":"Open Repository on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openWorkingFile","title":"Open Working File","category":"GitLens","icon":{"dark":"images/dark/icon-open-working-file.svg","light":"images/light/icon-open-working-file.svg"}},{"command":"gitlens.stashApply","title":"Apply Stashed Changes","category":"GitLens","icon":{"dark":"images/dark/icon-stash-pop.svg","light":"images/light/icon-stash-pop.svg"}},{"command":"gitlens.stashDelete","title":"Delete Stashed Changes","category":"GitLens","icon":{"dark":"images/dark/icon-delete.svg","light":"images/light/icon-delete.svg"}},{"command":"gitlens.stashSave","title":"Stash All Changes","category":"GitLens","icon":{"dark":"images/dark/icon-stash-save.svg","light":"images/light/icon-stash-save.svg"}},{"command":"gitlens.stashSaveFiles","title":"Stash Changes","category":"GitLens","icon":{"dark":"images/dark/icon-stash-save.svg","light":"images/light/icon-stash-save.svg"}},{"command":"gitlens.externalDiff","title":"Open Changes (with difftool)","category":"GitLens"},{"command":"gitlens.externalDiffAll","title":"Open All Changes (with difftool)","category":"GitLens"},{"command":"gitlens.resetSuppressedWarnings","title":"Reset Suppressed Warnings","category":"GitLens"},{"command":"gitlens.views.exploreRepoRevision","title":"Explore Repository from Here","category":"GitLens"},{"command":"gitlens.fetchRepositories","title":"Fetch Repositories","category":"GitLens","icon":{"dark":"images/dark/icon-sync.svg","light":"images/light/icon-sync.svg"}},{"command":"gitlens.pullRepositories","title":"Pull Repositories","category":"GitLens","icon":{"dark":"images/dark/icon-pull.svg","light":"images/light/icon-pull.svg"}},{"command":"gitlens.pushRepositories","title":"Push Repositories","category":"GitLens","icon":{"dark":"images/dark/icon-push.svg","light":"images/light/icon-push.svg"}},{"command":"gitlens.views.checkout","title":"Checkout","category":"GitLens","icon":{"dark":"images/dark/icon-checkout.svg","light":"images/light/icon-checkout.svg"}},{"command":"gitlens.views.fetch","title":"Fetch","category":"GitLens","icon":{"dark":"images/dark/icon-sync.svg","light":"images/light/icon-sync.svg"}},{"command":"gitlens.views.pull","title":"Pull","category":"GitLens","icon":{"dark":"images/dark/icon-pull.svg","light":"images/light/icon-pull.svg"}},{"command":"gitlens.views.push","title":"Push","category":"GitLens","icon":{"dark":"images/dark/icon-push.svg","light":"images/light/icon-push.svg"}},{"command":"gitlens.views.pushWithForce","title":"Push (force)","category":"GitLens","icon":{"dark":"images/dark/icon-push-force.svg","light":"images/light/icon-push-force.svg"}},{"command":"gitlens.views.openInTerminal","title":"Open in Terminal","category":"GitLens"},{"command":"gitlens.views.setAsDefault","title":"Set as Default","category":"GitLens"},{"command":"gitlens.views.unsetAsDefault","title":"Unset as Default","category":"GitLens"},{"command":"gitlens.views.stageDirectory","title":"Stage All Changes","category":"GitLens","icon":{"dark":"images/dark/icon-add.svg","light":"images/light/icon-add.svg"}},{"command":"gitlens.views.stageFile","title":"Stage Changes","category":"GitLens","icon":{"dark":"images/dark/icon-add.svg","light":"images/light/icon-add.svg"}},{"command":"gitlens.views.unstageDirectory","title":"Unstage All Changes","category":"GitLens","icon":{"dark":"images/dark/icon-minus.svg","light":"images/light/icon-minus.svg"}},{"command":"gitlens.views.unstageFile","title":"Unstage Changes","category":"GitLens","icon":{"dark":"images/dark/icon-minus.svg","light":"images/light/icon-minus.svg"}},{"command":"gitlens.views.star","title":"Add to Favorites","category":"GitLens","icon":{"dark":"images/dark/icon-star.svg","light":"images/light/icon-star.svg"}},{"command":"gitlens.views.unstar","title":"Remove from Favorites","category":"GitLens","icon":{"dark":"images/dark/icon-star-filled.svg","light":"images/light/icon-star-filled.svg"}},{"command":"gitlens.views.openDirectoryDiff","title":"Open Directory Compare","category":"GitLens"},{"command":"gitlens.views.openDirectoryDiffWithWorking","title":"Open Directory Compare with Working Tree","category":"GitLens"},{"command":"gitlens.views.openChanges","title":"Open Changes","category":"GitLens"},{"command":"gitlens.views.openChangesWithWorking","title":"Open Changes with Working File","category":"GitLens"},{"command":"gitlens.views.openFile","title":"Open File","category":"GitLens","icon":{"dark":"images/dark/icon-open-file.svg","light":"images/light/icon-open-file.svg"}},{"command":"gitlens.views.openFileRevision","title":"Open Revision","category":"GitLens"},{"command":"gitlens.views.openFileRevisionInRemote","title":"Open Revision on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.views.openChangedFiles","title":"Open Files","category":"GitLens"},{"command":"gitlens.views.openChangedFileChanges","title":"Open All Changes","category":"GitLens"},{"command":"gitlens.views.openChangedFileChangesWithWorking","title":"Open All Changes with Working Tree","category":"GitLens"},{"command":"gitlens.views.openChangedFileRevisions","title":"Open Revisions","category":"GitLens"},{"command":"gitlens.views.applyChanges","title":"Apply Changes","category":"GitLens"},{"command":"gitlens.views.closeRepository","title":"Close Repository","category":"GitLens"},{"command":"gitlens.views.compareAncestryWithWorking","title":"Compare Ancestry with Working Tree","category":"GitLens"},{"command":"gitlens.views.compareWithHead","title":"Compare with HEAD","category":"GitLens","icon":{"dark":"images/dark/icon-compare-refs.svg","light":"images/light/icon-compare-refs.svg"}},{"command":"gitlens.views.compareWithRemote","title":"Compare with Remote","category":"GitLens","icon":{"dark":"images/dark/icon-compare-ref-remote.svg","light":"images/light/icon-compare-ref-remote.svg"}},{"command":"gitlens.views.compareWithSelected","title":"Compare with Selected","category":"GitLens"},{"command":"gitlens.views.selectForCompare","title":"Select for Compare","category":"GitLens"},{"command":"gitlens.views.compareFileWithSelected","title":"Compare with Selected","category":"GitLens"},{"command":"gitlens.views.selectFileForCompare","title":"Select for Compare","category":"GitLens"},{"command":"gitlens.views.compareWithWorking","title":"Compare with Working Tree","category":"GitLens","icon":{"dark":"images/dark/icon-compare-ref-working.svg","light":"images/light/icon-compare-ref-working.svg"}},{"command":"gitlens.views.terminalCheckoutBranch","title":"Checkout Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalCreateBranch","title":"Create Branch (via Terminal)...","category":"GitLens"},{"command":"gitlens.views.terminalDeleteBranch","title":"Delete Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalMergeBranch","title":"Merge Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalRebaseBranch","title":"Rebase (Interactive) Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalRebaseBranchToRemote","title":"Rebase (Interactive) Branch to Remote (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalSquashBranchIntoCommit","title":"Squash Branch into Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalCheckoutCommit","title":"Checkout Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalCherryPickCommit","title":"Cherry Pick Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalPushCommit","title":"Push to Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalRebaseCommit","title":"Rebase to Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalResetCommit","title":"Reset to Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalRevertCommit","title":"Revert Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalRemoveRemote","title":"Remove Remote (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalCreateTag","title":"Create Tag (via Terminal)...","category":"GitLens"},{"command":"gitlens.views.terminalDeleteTag","title":"Delete Tag (via Terminal)","category":"GitLens"},{"command":"gitlens.views.repositories.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","title":"Automatic Layout","category":"GitLens"},{"command":"gitlens.views.repositories.setFilesLayoutToList","title":"List Layout","category":"GitLens"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","title":"Tree Layout","category":"GitLens"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","title":"Enable Automatic Refresh","category":"GitLens"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","title":"Disable Automatic Refresh","category":"GitLens"},{"command":"gitlens.views.fileHistory.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.fileHistory.changeBase","title":"Change Base...","category":"GitLens","icon":{"dark":"images/dark/icon-history.svg","light":"images/light/icon-history.svg"}},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","title":"Resume File Tracking","category":"GitLens","icon":{"dark":"images/dark/icon-location.svg","light":"images/light/icon-location.svg"}},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","title":"Pause File Tracking","category":"GitLens","icon":{"dark":"images/dark/icon-location-filled.svg","light":"images/light/icon-location-filled.svg"}},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","title":"Follow Renames","category":"GitLens"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","title":"Don't Follow Renames","category":"GitLens"},{"command":"gitlens.views.lineHistory.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.lineHistory.changeBase","title":"Change Base...","category":"GitLens","icon":{"dark":"images/dark/icon-history.svg","light":"images/light/icon-history.svg"}},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","title":"Resume Line Tracking","category":"GitLens","icon":{"dark":"images/dark/icon-location.svg","light":"images/light/icon-location.svg"}},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","title":"Pause Line Tracking","category":"GitLens","icon":{"dark":"images/dark/icon-location-filled.svg","light":"images/light/icon-location-filled.svg"}},{"command":"gitlens.views.lineHistory.setRenameFollowingOn","title":"Follow Renames","category":"GitLens"},{"command":"gitlens.views.lineHistory.setRenameFollowingOff","title":"Don't Follow Renames","category":"GitLens"},{"command":"gitlens.views.compare.selectForCompare","title":"Compare Branch or Tag with...","category":"GitLens","icon":{"dark":"images/dark/icon-compare-refs.svg","light":"images/light/icon-compare-refs.svg"}},{"command":"gitlens.views.compare.clear","title":"Clear Results","category":"GitLens","icon":{"dark":"images/dark/icon-clear.svg","light":"images/light/icon-clear.svg"}},{"command":"gitlens.views.compare.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.compare.setFilesLayoutToAuto","title":"Automatic Layout","category":"GitLens"},{"command":"gitlens.views.compare.setFilesLayoutToList","title":"List Layout","category":"GitLens"},{"command":"gitlens.views.compare.setFilesLayoutToTree","title":"Tree Layout","category":"GitLens"},{"command":"gitlens.views.compare.setKeepResultsToOn","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-lock.svg","light":"images/light/icon-lock.svg"}},{"command":"gitlens.views.compare.setKeepResultsToOff","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-locked.svg","light":"images/light/icon-locked.svg"}},{"command":"gitlens.views.compare.pinComparison","title":"Pin Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-pin-tilted.svg","light":"images/light/icon-pin-tilted.svg"}},{"command":"gitlens.views.compare.unpinComparison","title":"Unpin Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-pin-filled.svg","light":"images/light/icon-pin-filled.svg"}},{"command":"gitlens.views.compare.swapComparison","title":"Swap Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-swap.svg","light":"images/light/icon-swap.svg"}},{"command":"gitlens.views.search.searchCommits","title":"Search Commits","category":"GitLens","icon":{"dark":"images/dark/icon-search.svg","light":"images/light/icon-search.svg"}},{"command":"gitlens.views.search.clear","title":"Clear Results","category":"GitLens","icon":{"dark":"images/dark/icon-clear.svg","light":"images/light/icon-clear.svg"}},{"command":"gitlens.views.search.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.search.setFilesLayoutToAuto","title":"Automatic Layout","category":"GitLens"},{"command":"gitlens.views.search.setFilesLayoutToList","title":"List Layout","category":"GitLens"},{"command":"gitlens.views.search.setFilesLayoutToTree","title":"Tree Layout","category":"GitLens"},{"command":"gitlens.views.search.setKeepResultsToOn","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-lock.svg","light":"images/light/icon-lock.svg"}},{"command":"gitlens.views.search.setKeepResultsToOff","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-locked.svg","light":"images/light/icon-locked.svg"}},{"command":"gitlens.views.dismissNode","title":"Dismiss","category":"GitLens","icon":{"dark":"images/dark/icon-close-small.svg","light":"images/light/icon-close-small.svg"}},{"command":"gitlens.views.expandNode","title":"Expand","category":"GitLens"},{"command":"gitlens.views.refreshNode","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}}],"menus":{"commandPalette":[{"command":"gitlens.showCompareView","when":"gitlens:enabled"},{"command":"gitlens.showFileHistoryView","when":"gitlens:enabled"},{"command":"gitlens.showLineHistoryView","when":"gitlens:enabled"},{"command":"gitlens.showRepositoriesView","when":"gitlens:enabled"},{"command":"gitlens.showSearchView","when":"gitlens:enabled"},{"command":"gitlens.diffDirectory","when":"gitlens:enabled"},{"command":"gitlens.diffDirectoryWithHead","when":"gitlens:enabled"},{"command":"gitlens.diffHeadWithBranch","when":"gitlens:enabled"},{"command":"gitlens.diffWorkingWithBranch","when":"gitlens:enabled"},{"command":"gitlens.diffWithBranch","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithNext","when":"gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithPrevious","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithPreviousInDiff","when":"isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithPrevious","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.diffWithRevision","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithWorking","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithWorking","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.externalDiff","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.externalDiffAll","when":"gitlens:enabled"},{"command":"gitlens.toggleFileBlame","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.clearFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computed"},{"command":"gitlens.computingFileAnnotations","when":"false"},{"command":"gitlens.toggleFileHeatmap","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleFileRecentChanges","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleLineBlame","when":"gitlens:enabled"},{"command":"gitlens.toggleCodeLens","when":"gitlens:enabled && gitlens:canToggleCodeLens"},{"command":"gitlens.switchMode","when":"gitlens:enabled"},{"command":"gitlens.toggleReviewMode","when":"gitlens:enabled"},{"command":"gitlens.toggleZenMode","when":"gitlens:enabled"},{"command":"gitlens.showCommitSearch","when":"gitlens:enabled"},{"command":"gitlens.showLastQuickPick","when":"gitlens:enabled"},{"command":"gitlens.showCommitInView","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showFileHistoryInView","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.showQuickCommitDetails","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showQuickCommitFileDetails","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showQuickRevisionDetails","when":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.showQuickBranchHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","when":"gitlens:enabled"},{"command":"gitlens.showQuickStashList","when":"gitlens:enabled"},{"command":"gitlens.copyMessageToClipboard","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.copyShaToClipboard","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.closeUnchangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openChangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openBranchesInRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.openBranchInRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.openCommitInRemote","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.openFileInRemote","when":"gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.openFileRevision","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.openFileRevisionFromBranch","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.openRepoInRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.stashApply","when":"gitlens:enabled && !gitlens:readonly"},{"command":"gitlens.stashDelete","when":"false"},{"command":"gitlens.stashSave","when":"gitlens:enabled && !gitlens:readonly"},{"command":"gitlens.stashSaveFiles","when":"false"},{"command":"gitlens.resetSuppressedWarnings","when":"gitlens:enabled"},{"command":"gitlens.views.exploreRepoRevision","when":"false"},{"command":"gitlens.fetchRepositories","when":"gitlens:hasRemotes && !gitlens:readonly"},{"command":"gitlens.pullRepositories","when":"gitlens:hasRemotes && !gitlens:readonly"},{"command":"gitlens.pushRepositories","when":"gitlens:hasRemotes && !gitlens:readonly"},{"command":"gitlens.views.checkout","when":"false"},{"command":"gitlens.views.fetch","when":"false"},{"command":"gitlens.views.pull","when":"false"},{"command":"gitlens.views.push","when":"false"},{"command":"gitlens.views.pushWithForce","when":"false"},{"command":"gitlens.views.openInTerminal","when":"false"},{"command":"gitlens.views.setAsDefault","when":"false"},{"command":"gitlens.views.unsetAsDefault","when":"false"},{"command":"gitlens.views.stageDirectory","when":"false"},{"command":"gitlens.views.stageFile","when":"false"},{"command":"gitlens.views.unstageDirectory","when":"false"},{"command":"gitlens.views.unstageFile","when":"false"},{"command":"gitlens.views.star","when":"false"},{"command":"gitlens.views.unstar","when":"false"},{"command":"gitlens.views.openChanges","when":"false"},{"command":"gitlens.views.openDirectoryDiff","when":"false"},{"command":"gitlens.views.openDirectoryDiffWithWorking","when":"false"},{"command":"gitlens.views.openChangesWithWorking","when":"false"},{"command":"gitlens.views.openFile","when":"false"},{"command":"gitlens.views.openFileRevision","when":"false"},{"command":"gitlens.views.openFileRevisionInRemote","when":"false"},{"command":"gitlens.views.openChangedFiles","when":"false"},{"command":"gitlens.views.openChangedFileChanges","when":"false"},{"command":"gitlens.views.openChangedFileChangesWithWorking","when":"false"},{"command":"gitlens.views.openChangedFileRevisions","when":"false"},{"command":"gitlens.views.applyChanges","when":"false"},{"command":"gitlens.views.closeRepository","when":"false"},{"command":"gitlens.views.compareAncestryWithWorking","when":"false"},{"command":"gitlens.views.compareWithHead","when":"false"},{"command":"gitlens.views.compareWithRemote","when":"false"},{"command":"gitlens.views.compareWithSelected","when":"false"},{"command":"gitlens.views.selectForCompare","when":"false"},{"command":"gitlens.views.compareFileWithSelected","when":"false"},{"command":"gitlens.views.selectFileForCompare","when":"false"},{"command":"gitlens.views.compareWithWorking","when":"false"},{"command":"gitlens.views.terminalCheckoutBranch","when":"false"},{"command":"gitlens.views.terminalCreateBranch","when":"false"},{"command":"gitlens.views.terminalDeleteBranch","when":"false"},{"command":"gitlens.views.terminalMergeBranch","when":"false"},{"command":"gitlens.views.terminalRebaseBranch","when":"false"},{"command":"gitlens.views.terminalRebaseBranchToRemote","when":"false"},{"command":"gitlens.views.terminalSquashBranchIntoCommit","when":"false"},{"command":"gitlens.views.terminalCheckoutCommit","when":"false"},{"command":"gitlens.views.terminalCherryPickCommit","when":"false"},{"command":"gitlens.views.terminalPushCommit","when":"false"},{"command":"gitlens.views.terminalRebaseCommit","when":"false"},{"command":"gitlens.views.terminalResetCommit","when":"false"},{"command":"gitlens.views.terminalRevertCommit","when":"false"},{"command":"gitlens.views.terminalRemoveRemote","when":"false"},{"command":"gitlens.views.terminalCreateTag","when":"false"},{"command":"gitlens.views.terminalDeleteTag","when":"false"},{"command":"gitlens.views.repositories.refresh","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"false"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"false"},{"command":"gitlens.views.fileHistory.refresh","when":"false"},{"command":"gitlens.views.fileHistory.changeBase","when":"false"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","when":"false"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","when":"false"},{"command":"gitlens.views.lineHistory.refresh","when":"false"},{"command":"gitlens.views.lineHistory.changeBase","when":"false"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","when":"false"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","when":"false"},{"command":"gitlens.views.lineHistory.setRenameFollowingOn","when":"false"},{"command":"gitlens.views.lineHistory.setRenameFollowingOff","when":"false"},{"command":"gitlens.views.compare.selectForCompare","when":"gitlens:enabled && gitlens.views.compare.enabled"},{"command":"gitlens.views.compare.clear","when":"false"},{"command":"gitlens.views.compare.refresh","when":"false"},{"command":"gitlens.views.compare.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.compare.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.compare.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.compare.setKeepResultsToOn","when":"false"},{"command":"gitlens.views.compare.setKeepResultsToOff","when":"false"},{"command":"gitlens.views.compare.pinComparison","when":"false"},{"command":"gitlens.views.compare.unpinComparison","when":"false"},{"command":"gitlens.views.compare.swapComparison","when":"false"},{"command":"gitlens.views.search.searchCommits","when":"false"},{"command":"gitlens.views.search.clear","when":"false"},{"command":"gitlens.views.search.refresh","when":"false"},{"command":"gitlens.views.search.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.search.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.search.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.search.setKeepResultsToOn","when":"false"},{"command":"gitlens.views.search.setKeepResultsToOff","when":"false"},{"command":"gitlens.views.dismissNode","when":"false"},{"command":"gitlens.views.expandNode","when":"false"},{"command":"gitlens.views.refreshNode","when":"false"}],"editor/context":[{"command":"gitlens.diffLineWithPrevious","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.compare","group":"1_gitlens@1"},{"command":"gitlens.diffLineWithWorking","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.compare","group":"1_gitlens@2"},{"command":"gitlens.openFileInRemote","when":"editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.remote","group":"1_gitlens_1@1"},{"command":"gitlens.openCommitInRemote","when":"editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.remote","group":"1_gitlens_1@2"},{"command":"gitlens.showQuickCommitFileDetails","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.details","group":"1_gitlens_1@3"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editor.history","group":"3_gitlens@1"},{"command":"gitlens.showFileHistoryInView","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editor.history","group":"3_gitlens@2"},{"command":"gitlens.toggleFileBlame","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.blame","group":"3_gitlens@3"},{"command":"gitlens.copyShaToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard","group":"9_b_gitlens@1"},{"command":"gitlens.copyMessageToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard","group":"9_b_gitlens@2"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.clipboard","group":"9_b_gitlens@3"}],"editor/title":[{"command":"gitlens.diffWithWorking","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != file && resourceScheme != git","group":"navigation@0"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != file && resourceScheme != git","group":"navigation@0"},{"command":"gitlens.openWorkingFile","when":"!gitlens:activeFileStatus =~ /revision/ && resourceScheme != file && resourceScheme != git && isInDiffEditor","group":"navigation@0"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme == git && !isInDiffEditor","group":"navigation@0"},{"command":"gitlens.diffWithPrevious","alt":"gitlens.diffWithRevision","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare","group":"navigation@97"},{"command":"gitlens.diffWithPreviousInDiff","alt":"gitlens.diffWithRevision","when":"isInDiffEditor && gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare","group":"navigation@97"},{"command":"gitlens.showQuickRevisionDetails","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != git && config.gitlens.menus.editorGroup.compare","group":"navigation@98"},{"command":"gitlens.diffWithNext","when":"gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /revision/ && config.gitlens.menus.editorGroup.compare","group":"navigation@99"},{"command":"gitlens.toggleFileBlame","alt":"gitlens.toggleFileHeatmap","when":"gitlens:activeFileStatus =~ /blameable/ && !gitlens:annotationStatus && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.computingFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computing && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.clearFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computed && config.gitlens.menus.editorGroup.blame","group":"navigation@100"}],"editor/title/context":[{"command":"gitlens.openWorkingFile","when":"resourceScheme == gitlens","group":"1_co_gitlens@1"},{"command":"gitlens.openFileInRemote","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.editorTab.remote","group":"1_co_gitlens@2"},{"command":"gitlens.diffWithPrevious","when":"gitlens:enabled && config.gitlens.menus.editorTab.compare","group":"1_co_gitlens_1@1"},{"command":"gitlens.diffWithRevision","when":"gitlens:enabled && config.gitlens.menus.editorTab.compare","group":"1_co_gitlens_1@2"},{"command":"gitlens.diffWithWorking","when":"resourceScheme == gitlens && config.gitlens.menus.editorTab.compare","group":"1_co_gitlens_1@3"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:enabled && config.gitlens.menus.editorTab.history","group":"1_co_gitlens_2@1"},{"command":"gitlens.showFileHistoryInView","when":"gitlens:enabled && config.gitlens.menus.editorTab.history","group":"1_co_gitlens_2@2"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.editorTab.clipboard","group":"1_cutcopypaste@100"}],"explorer/context":[{"command":"gitlens.openFileInRemote","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.explorer.remote","group":"navigation@100"},{"command":"gitlens.diffWithPrevious","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.compare","group":"3_compare@1"},{"command":"gitlens.diffWithRevision","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.compare","group":"3_compare@2"},{"command":"gitlens.showQuickFileHistory","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.history","group":"4_gitlens_1@1"},{"command":"gitlens.showFileHistoryInView","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.history","group":"4_gitlens_1@2"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.explorer.clipboard","group":"5_cutcopypaste@100"}],"scm/resourceGroup/context":[{"command":"gitlens.stashSave","when":"gitlens:enabled && !gitlens:readonly && config.gitlens.menus.scmGroup.stashInline","group":"inline@-1"},{"command":"gitlens.stashSave","when":"gitlens:enabled && !gitlens:readonly && config.gitlens.menus.scmGroup.stash","group":"1_modification@100"},{"command":"gitlens.openChangedFiles","when":"gitlens:enabled && config.gitlens.menus.scmGroup.openClose","group":"2_gitlens@1"},{"command":"gitlens.closeUnchangedFiles","when":"gitlens:enabled && config.gitlens.menus.scmGroup.openClose","group":"2_gitlens@2"},{"command":"gitlens.externalDiffAll","when":"gitlens:enabled && config.gitlens.menus.scmGroup.compare","group":"3_gitlens@3"},{"command":"gitlens.diffDirectoryWithHead","when":"gitlens:enabled && config.gitlens.menus.scmGroup.compare","group":"3_gitlens@4"}],"scm/resourceState/context":[{"command":"gitlens.openFileInRemote","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.scmItem.remote","group":"navigation"},{"command":"gitlens.externalDiff","when":"gitlens:enabled && config.gitlens.menus.scmItem.compare","group":"navigation"},{"command":"gitlens.diffWithRevision","when":"gitlens:enabled && config.gitlens.menus.scmItem.compare","group":"1_gitlens@1"},{"command":"gitlens.diffWithBranch","when":"gitlens:enabled && config.gitlens.menus.scmItem.compare","group":"1_gitlens@2"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:enabled && config.gitlens.menus.scmItem.history","group":"1_gitlens_1@1"},{"command":"gitlens.showFileHistoryInView","when":"gitlens:enabled && config.gitlens.menus.scmItem.history","group":"1_gitlens_1@2"},{"command":"gitlens.stashSaveFiles","when":"gitlens:enabled && !gitlens:readonly && config.gitlens.menus.scmItem.stash","group":"1_modification@-1"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.scmItem.clipboard","group":"9_gitlens@1"}],"view/title":[{"command":"gitlens.pushRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && view =~ /^gitlens\\.views\\.repositories:/","group":"navigation@10"},{"command":"gitlens.pullRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && view =~ /^gitlens\\.views\\.repositories:/","group":"navigation@11"},{"command":"gitlens.fetchRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && view =~ /^gitlens\\.views\\.repositories:/","group":"navigation@12"},{"command":"gitlens.views.repositories.refresh","when":"view =~ /^gitlens\\.views\\.repositories:/","group":"navigation@99"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.repositories:/","group":"1_gitlens"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.repositories:/","group":"1_gitlens"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.repositories:/","group":"1_gitlens"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"view =~ /^gitlens\\.views\\.repositories:/ && config.gitlens.views.repositories.autoRefresh && !gitlens:views:repositories:autoRefresh","group":"2_gitlens"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"view =~ /^gitlens\\.views\\.repositories:/ && config.gitlens.views.repositories.autoRefresh && gitlens:views:repositories:autoRefresh","group":"2_gitlens"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","when":"view =~ /^gitlens\\.views\\.fileHistory:/ && !gitlens:views:fileHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","when":"view =~ /^gitlens\\.views\\.fileHistory:/ && gitlens:views:fileHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.fileHistory.changeBase","when":"view =~ /^gitlens\\.views\\.fileHistory:/","group":"navigation@11"},{"command":"gitlens.views.fileHistory.refresh","when":"view =~ /^gitlens\\.views\\.fileHistory:/","group":"navigation@99"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","when":"view =~ /^gitlens\\.views\\.fileHistory:/ && !config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","when":"view =~ /^gitlens\\.views\\.fileHistory:/ && config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","when":"view =~ /^gitlens\\.views\\.lineHistory:/ && !gitlens:views:lineHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","when":"view =~ /^gitlens\\.views\\.lineHistory:/ && gitlens:views:lineHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.lineHistory.changeBase","when":"view =~ /^gitlens\\.views\\.lineHistory:/","group":"navigation@11"},{"command":"gitlens.views.lineHistory.refresh","when":"view =~ /^gitlens\\.views\\.lineHistory:/","group":"navigation@99"},{"command":"gitlens.views.lineHistory.setRenameFollowingOn","when":"view =~ /^gitlens\\.views\\.lineHistory:/ && !config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.views.lineHistory.setRenameFollowingOff","when":"view =~ /^gitlens\\.views\\.lineHistory:/ && config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.views.compare.selectForCompare","when":"view =~ /^gitlens\\.views\\.compare:/","group":"navigation@10"},{"command":"gitlens.views.compare.setKeepResultsToOn","when":"view =~ /^gitlens\\.views\\.compare:/ && !gitlens:views:compare:keepResults","group":"navigation@11"},{"command":"gitlens.views.compare.setKeepResultsToOff","when":"view =~ /^gitlens\\.views\\.compare:/ && gitlens:views:compare:keepResults","group":"navigation@11"},{"command":"gitlens.views.compare.clear","when":"view =~ /^gitlens\\.views\\.compare:/","group":"navigation@98"},{"command":"gitlens.views.compare.refresh","when":"view =~ /^gitlens\\.views\\.compare:/","group":"navigation@99"},{"command":"gitlens.views.compare.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.compare:/","group":"1_gitlens"},{"command":"gitlens.views.compare.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.compare:/","group":"1_gitlens"},{"command":"gitlens.views.compare.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.compare:/","group":"1_gitlens"},{"command":"gitlens.views.search.searchCommits","when":"view =~ /^gitlens\\.views\\.search:/","group":"navigation@10"},{"command":"gitlens.views.search.setKeepResultsToOn","when":"view =~ /^gitlens\\.views\\.search:/ && !gitlens:views:search:keepResults","group":"navigation@11"},{"command":"gitlens.views.search.setKeepResultsToOff","when":"view =~ /^gitlens\\.views\\.search:/ && gitlens:views:search:keepResults","group":"navigation@11"},{"command":"gitlens.views.search.clear","when":"view =~ /^gitlens\\.views\\.search:/","group":"navigation@98"},{"command":"gitlens.views.search.refresh","when":"view =~ /^gitlens\\.views\\.search:/","group":"navigation@99"},{"command":"gitlens.views.search.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.search:/","group":"1_gitlens"},{"command":"gitlens.views.search.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.search:/","group":"1_gitlens"},{"command":"gitlens.views.search.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.search:/","group":"1_gitlens"},{"command":"gitlens.supportGitLens","when":"view =~ /^gitlens\\.views\\..*:/ && config.gitlens.advanced.messages.suppressSupportGitLensNotification != true && gitlens:views:supportGitLens:hide != true","group":"navigation@1"},{"command":"gitlens.showSettingsPage","when":"view =~ /^gitlens\\.views\\..*:/","group":"9_gitlens"}],"view/item/context":[{"command":"gitlens.openBranchesInRemote","when":"viewItem =~ /gitlens:branches\\b.*?\\+remotes\\b.*?/","group":"inline@98"},{"command":"gitlens.openBranchesInRemote","when":"viewItem =~ /gitlens:branches\\b.*?\\+remotes\\b.*?/","group":"1_gitlens@1"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\+starred\\b.*?)/","group":"inline@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:branch\\b.*?\\+starred\\b.*?/","group":"inline@2"},{"command":"gitlens.views.checkout","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/","group":"inline@10"},{"command":"gitlens.views.compareWithRemote","when":"viewItem =~ /gitlens:branch\\b.*?\\+tracking\\b.*?/","group":"inline@96"},{"command":"gitlens.views.compareWithHead","when":"viewItem =~ /gitlens:(branch\\b(?!.*?\\+current\\b.*?)|commit\\b|stash\\b|tag\\b)/","group":"inline@97","alt":"gitlens.views.compareWithWorking"},{"command":"gitlens.views.compareWithWorking","when":"viewItem =~ /gitlens:branch\\b.*?\\+current\\b.*?/","group":"inline@97"},{"command":"gitlens.openBranchInRemote","when":"viewItem =~ /gitlens:branch\\b.*?\\+(tracking|remote)\\b.*?/","group":"inline@98"},{"command":"gitlens.views.checkout","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/","group":"1_gitlens@1"},{"command":"gitlens.openBranchInRemote","when":"viewItem =~ /gitlens:branch\\b.*?\\+(tracking|remote)\\b.*?/","group":"2_gitlens@1"},{"command":"gitlens.views.compareWithRemote","when":"viewItem =~ /gitlens:branch\\b.*?\\+tracking\\b.*?/","group":"7_gitlens@1"},{"command":"gitlens.views.compareWithHead","when":"viewItem =~ /gitlens:(branch\\b(?!.*?\\+current\\b.*?)|commit\\b|stash\\b|tag\\b)/","group":"7_gitlens@2"},{"command":"gitlens.views.compareWithWorking","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"7_gitlens@3"},{"command":"gitlens.views.compareAncestryWithWorking","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/","group":"7_gitlens@4"},{"command":"gitlens.views.compareWithSelected","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && gitlens:views:canCompare","group":"7_gitlens_@1"},{"command":"gitlens.views.selectForCompare","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"7_gitlens_@2"},{"command":"gitlens.views.compareFileWithSelected","when":"viewItem =~ /gitlens:file:\\b/ && gitlens:views:canCompare:file","group":"7_gitlens_@1"},{"command":"gitlens.views.selectFileForCompare","when":"viewItem =~ /gitlens:file:\\b/","group":"7_gitlens_@2"},{"command":"gitlens.views.openDirectoryDiffWithWorking","when":"viewItem =~ /gitlens:(branch|tag)\\b/","group":"7_gitlens_more@2"},{"command":"gitlens.views.terminalCheckoutBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)//","group":"8_gitlens@1"},{"command":"gitlens.views.terminalRebaseBranchToRemote","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b.*?\\+current\\b.*?\\+tracking\\b.*?/","group":"8_gitlens@1"},{"command":"gitlens.views.terminalMergeBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/","group":"8_gitlens@2"},{"command":"gitlens.views.terminalRebaseBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/","group":"8_gitlens@3"},{"command":"gitlens.views.terminalSquashBranchIntoCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/","group":"8_gitlens@4"},{"command":"gitlens.views.terminalCreateBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:(branch|commit|tag)\\b/","group":"8_gitlens@5"},{"command":"gitlens.views.terminalDeleteBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/","group":"8_gitlens@6"},{"command":"gitlens.views.terminalCreateTag","when":"!gitlens:readonly && viewItem =~ /gitlens:(branch|commit)\\b/","group":"8_gitlens@7"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\+starred\\b.*?)/","group":"8_gitlens_@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:branch\\b.*?\\+starred\\b.*?/","group":"8_gitlens_@1"},{"command":"gitlens.openCommitInRemote","when":"viewItem =~ /gitlens:commit\\b/ && gitlens:hasRemotes","group":"inline@98"},{"command":"gitlens.openCommitInRemote","when":"viewItem =~ /gitlens:commit\\b/ && gitlens:hasRemotes","group":"1_gitlens@1"},{"command":"gitlens.views.openChangedFileChanges","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"2_gitlens@1"},{"command":"gitlens.views.openChangedFileChangesWithWorking","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"2_gitlens@2"},{"command":"gitlens.views.openChangedFiles","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"3_gitlens@1"},{"command":"gitlens.views.openChangedFileRevisions","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"3_gitlens@2"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:(file:)?commit\\b/","group":"inline@98","alt":"gitlens.copyMessageToClipboard"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:(file:)?commit\\b/","group":"5_gitlens@1"},{"command":"gitlens.copyMessageToClipboard","when":"viewItem =~ /gitlens:(commit|stash|file:commit)\\b/","group":"5_gitlens@2"},{"command":"gitlens.showQuickCommitDetails","when":"viewItem =~ /gitlens:commit\\b/","group":"5_gitlens_1@1"},{"command":"gitlens.showCommitInView","when":"viewItem =~ /gitlens:commit\\b/","group":"5_gitlens_1@2"},{"command":"gitlens.views.terminalCherryPickCommit","when":"!gitlens:readonly && viewItem == gitlens:commit","group":"8_gitlens@1"},{"command":"gitlens.views.terminalPushCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b.*?\\+current\\b.*?/","group":"8_gitlens@2"},{"command":"gitlens.views.terminalRevertCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b.*?\\+current\\b.*?/","group":"8_gitlens@3"},{"command":"gitlens.views.terminalCheckoutCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b/","group":"8_gitlens@4"},{"command":"gitlens.views.terminalRebaseCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b/","group":"8_gitlens@5"},{"command":"gitlens.views.terminalResetCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b/","group":"8_gitlens@6"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/","group":"inline@1"},{"command":"gitlens.views.stageFile","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b.*?\\+unstaged\\b.*?/","group":"inline@1"},{"command":"gitlens.views.unstageFile","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b.*?\\+staged\\b.*?/","group":"inline@1"},{"command":"gitlens.views.stageFile","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b.*?\\+unstaged\\b.*?/","group":"1_gitlens@1"},{"command":"gitlens.views.unstageFile","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b.*?\\+staged\\b.*?/","group":"1_gitlens@1"},{"command":"gitlens.stashSaveFiles","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b.*?\\+(un)?staged\\b.*?/","group":"1_gitlens@2"},{"command":"gitlens.views.openChanges","when":"viewItem =~ /gitlens:file\\b/","group":"2_gitlens@1"},{"command":"gitlens.externalDiff","when":"viewItem =~ /gitlens:file\\b/","group":"2_gitlens@2"},{"command":"gitlens.views.openChangesWithWorking","when":"viewItem =~ /gitlens:file\\b/","group":"2_gitlens@3"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/","group":"3_gitlens@1"},{"command":"gitlens.views.openFileRevision","when":"viewItem =~ /gitlens:file\\b/","group":"3_gitlens@2"},{"command":"gitlens.openFileInRemote","when":"viewItem =~ /gitlens:(file\\b(?!.*?\\+(un)?staged\\b.*?)|history:(file|line))\\b/ && gitlens:hasRemotes","group":"inline@99","alt":"gitlens.copyRemoteFileUrlToClipboard"},{"command":"gitlens.openFileInRemote","when":"viewItem =~ /gitlens:file\\b/ && gitlens:hasRemotes","group":"4_gitlens@1"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/ && gitlens:hasRemotes","group":"5_gitlens@3"},{"command":"gitlens.views.openFileRevisionInRemote","when":"viewItem == gitlens:file:commit && gitlens:hasRemotes","group":"4_gitlens@2"},{"command":"gitlens.openFileInRemote","when":"viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/ && gitlens:hasRemotes","group":"3_gitlens@2"},{"command":"gitlens.views.applyChanges","when":"viewItem =~ /gitlens:file:(commit|results)\\b/","group":"5_gitlens_1@1"},{"command":"gitlens.views.applyChanges","when":"!gitlens:readonly && viewItem == gitlens:file:stash","group":"1_gitlens@1"},{"command":"gitlens.showQuickCommitDetails","when":"viewItem =~ /gitlens:file\\b(?!(:stash|:status))/","group":"5_gitlens_2@2"},{"command":"gitlens.showCommitInView","when":"viewItem =~ /gitlens:file\\b(?!(:stash|:status))/","group":"5_gitlens_2@3"},{"command":"gitlens.showQuickFileHistory","when":"viewItem =~ /gitlens:file\\b/","group":"8_gitlens@1"},{"command":"gitlens.showFileHistoryInView","when":"viewItem =~ /gitlens:file\\b/","group":"8_gitlens@2"},{"command":"gitlens.views.fetch","when":"!gitlens:readonly && viewItem =~ /gitlens:remote\\b/","group":"inline@97"},{"command":"gitlens.openRepoInRemote","when":"viewItem =~ /gitlens:remote\\b/","group":"inline@98"},{"command":"gitlens.views.fetch","when":"!gitlens:readonly && viewItem =~ /gitlens:remote\\b/","group":"1_gitlens@1"},{"command":"gitlens.openRepoInRemote","when":"viewItem =~ /gitlens:remote\\b/","group":"2_gitlens@1"},{"command":"gitlens.openBranchesInRemote","when":"viewItem =~ /gitlens:remote\\b/","group":"2_gitlens@2"},{"command":"gitlens.views.terminalRemoveRemote","when":"!gitlens:readonly && viewItem =~ /gitlens:remote\\b/","group":"8_gitlens@1"},{"command":"gitlens.views.setAsDefault","when":"viewItem =~ /gitlens:remote\\b(?!.*?\\+default\\b.*?)/","group":"8_gitlens_@1"},{"command":"gitlens.views.unsetAsDefault","when":"viewItem =~ /gitlens:remote\\b.*?\\+default\\b.*?/","group":"8_gitlens_@1"},{"command":"gitlens.views.exploreRepoRevision","when":"viewItem =~ /gitlens:(branch|commit|file:(commit|results)|stash|tag)\\b/","group":"7_gitlens_more@1"},{"command":"gitlens.showCommitSearch","when":"viewItem =~ /gitlens:repository\\b/","group":"inline@10"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\+starred\\b.*?)/","group":"inline@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repository\\b.*?\\+starred\\b.*?/","group":"inline@2"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"inline@97","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"inline@98"},{"command":"gitlens.views.fetch","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"inline@99"},{"command":"gitlens.views.fetch","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.pushWithForce","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"1_gitlens@2"},{"command":"gitlens.views.openInTerminal","when":"viewItem =~ /gitlens:repository\\b/","group":"2_gitlens@1"},{"command":"gitlens.openRepoInRemote","when":"viewItem =~ /gitlens:repository\\b/ && gitlens:hasRemotes","group":"2_gitlens@2"},{"command":"gitlens.showCommitSearch","when":"viewItem =~ /gitlens:repository\\b/","group":"3_gitlens@1"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"4_gitlens@1"},{"command":"gitlens.stashSave","when":"!gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"4_gitlens@2"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\+starred\\b.*?)/","group":"8_gitlens@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repository\\b.*?\\+starred\\b.*?/","group":"8_gitlens@1"},{"command":"gitlens.views.closeRepository","when":"viewItem =~ /gitlens:repository\\b/","group":"8_gitlens@2"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:behind","group":"inline@1"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:behind","group":"1_gitlens@1"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:ahead","group":"inline@1","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:ahead","group":"1_gitlens@1"},{"command":"gitlens.views.pushWithForce","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:ahead","group":"1_gitlens@2"},{"command":"gitlens.views.dismissNode","when":"viewItem =~ /gitlens:(compare:picker:ref|compare:results\\b(?!.*?\\+pinned\\b.*?)|search)\\b(?!:(commits|files))/","group":"inline@99"},{"command":"gitlens.views.compare.pinComparison","when":"viewItem =~ /gitlens:compare:results\\b(?!.*?\\+pinned\\b.*?)/","group":"inline@1"},{"command":"gitlens.views.compare.unpinComparison","when":"viewItem =~ /gitlens:compare:results\\b.*?\\+pinned\\b.*?/","group":"inline@1"},{"command":"gitlens.views.compare.swapComparison","when":"viewItem =~ /gitlens:compare:results\\b/","group":"inline@2"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:compare:results\\b/","group":"inline@3"},{"command":"gitlens.views.openDirectoryDiff","when":"viewItem =~ /gitlens:compare:results\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.compare.pinComparison","when":"viewItem =~ /gitlens:compare:results\\b(?!.*?\\+pinned\\b.*?)/","group":"2_gitlens@1"},{"command":"gitlens.views.compare.unpinComparison","when":"viewItem =~ /gitlens:compare:results\\b.*?\\+pinned\\b.*?/","group":"2_gitlens@1"},{"command":"gitlens.views.compare.swapComparison","when":"viewItem =~ /gitlens:compare:results\\b/","group":"2_gitlens@2"},{"command":"gitlens.views.search.searchCommits","when":"viewItem == gitlens:search:results","group":"inline@1"},{"command":"gitlens.views.search.searchCommits","when":"viewItem == gitlens:search:results","group":"2_gitlens@1"},{"command":"gitlens.stashSave","when":"!gitlens:readonly && viewItem =~ /^gitlens:(stashes|status:files)$/","group":"inline@98"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem == gitlens:stashes","group":"inline@99"},{"command":"gitlens.stashSave","when":"!gitlens:readonly && viewItem =~ /^gitlens:(stashes|status:files)$/","group":"1_gitlens@1"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem == gitlens:stashes","group":"1_gitlens@2"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem == gitlens:stash","group":"inline@98"},{"command":"gitlens.stashDelete","when":"!gitlens:readonly && viewItem == gitlens:stash","group":"inline@99"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem == gitlens:stash","group":"1_gitlens@1"},{"command":"gitlens.stashDelete","when":"!gitlens:readonly && viewItem == gitlens:stash","group":"1_gitlens@2"},{"command":"gitlens.views.checkout","when":"!gitlens:readonly && viewItem =~ /gitlens:tag\\b/","group":"inline@10"},{"command":"gitlens.views.checkout","when":"!gitlens:readonly && viewItem =~ /gitlens:tag\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.terminalDeleteTag","when":"!gitlens:readonly && viewItem == gitlens:tag","group":"8_gitlens"},{"command":"gitlens.views.stageDirectory","when":"viewItem =~ /gitlens:folder\\b.*?\\+working\\b.*?/","group":"inline@1"},{"command":"gitlens.views.unstageDirectory","when":"viewItem =~ /gitlens:folder\\b.*?\\+working\\b.*?/","group":"inline@2"},{"command":"gitlens.views.stageDirectory","when":"viewItem =~ /gitlens:folder\\b.*?\\+working\\b.*?/","group":"1_gitlens@1"},{"command":"gitlens.views.unstageDirectory","when":"viewItem =~ /gitlens:folder\\b.*?\\+working\\b.*?/","group":"1_gitlens@2"},{"command":"gitlens.views.expandNode","when":"viewItem =~ /gitlens:(compare|folder|results|search|status:files)\\b/","group":"8_gitlens@1"},{"command":"gitlens.views.dismissNode","when":"viewItem =~ /gitlens:(compare:picker:ref|compare:results\\b(?!.*?\\+pinned\\b.*?)|search)\\b(?!:(commits|files))/","group":"8_gitlens@2"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:(?!file\\b)/","group":"9_gitlens@1"}]},"keybindings":[{"command":"gitlens.key.left","key":"alt+left","when":"gitlens:key:left"},{"command":"gitlens.key.right","key":"alt+right","when":"gitlens:key:right"},{"command":"gitlens.key.,","key":"alt+,","when":"gitlens:key:,"},{"command":"gitlens.key..","key":"alt+.","when":"gitlens:key:."},{"command":"gitlens.key.escape","key":"escape","when":"gitlens:key:escape && editorTextFocus && !findWidgetVisible && !renameInputVisible && !suggestWidgetVisible && !isInEmbeddedEditor"},{"command":"gitlens.toggleFileBlame","key":"alt+b","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleCodeLens","key":"shift+alt+b","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && gitlens:canToggleCodeLens"},{"command":"gitlens.showLastQuickPick","key":"alt+-","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showCommitSearch","key":"alt+/","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickFileHistory","key":"alt+h","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","key":"shift+alt+h","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","key":"alt+s","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickCommitFileDetails","key":"alt+c","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled"},{"command":"gitlens.diffWithNext","key":"alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithPrevious","key":"shift+alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithPrevious","key":"alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithPreviousInDiff","key":"alt+,","when":"config.gitlens.keymap == alternate && isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithWorking","key":"alt+w","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithWorking","key":"shift+alt+w","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.toggleFileBlame","key":"ctrl+shift+g b","mac":"cmd+alt+g b","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleCodeLens","key":"ctrl+shift+g shift+b","mac":"cmd+alt+g shift+b","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && gitlens:canToggleCodeLens"},{"command":"gitlens.showLastQuickPick","key":"ctrl+shift+g -","mac":"cmd+alt+g -","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showCommitSearch","key":"ctrl+shift+g /","mac":"cmd+alt+g /","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickFileHistory","key":"ctrl+shift+g h","mac":"cmd+alt+g h","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","key":"ctrl+shift+g shift+h","mac":"cmd+alt+g shift+h","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","key":"ctrl+shift+g s","mac":"cmd+alt+g s","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickCommitFileDetails","key":"ctrl+shift+g c","mac":"cmd+alt+g c","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled"},{"command":"gitlens.diffWithNext","key":"ctrl+shift+g .","mac":"cmd+alt+g .","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithPrevious","key":"ctrl+shift+g shift+,","mac":"cmd+alt+g shift+,","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithPrevious","key":"ctrl+shift+g ,","mac":"cmd+alt+g ,","when":"config.gitlens.keymap == chorded && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithPreviousInDiff","key":"ctrl+shift+g ,","mac":"cmd+alt+g ,","when":"config.gitlens.keymap == chorded && isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithWorking","key":"ctrl+shift+g w","mac":"cmd+alt+g w","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithWorking","key":"ctrl+shift+g shift+w","mac":"cmd+alt+g shift+w","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"workbench.view.scm","key":"ctrl+shift+g g","mac":"ctrl+shift+g","when":"config.gitlens.keymap == chorded && gitlens:enabled"}],"resourceLabelFormatters":[{"scheme":"gitlens","authority":"*","formatting":{"label":"${path} (${authority})","separator":"/"}}],"viewsContainers":{"activitybar":[{"id":"gitlens","title":"GitLens","icon":"images/gitlens-activitybar.svg"}]},"views":{"gitlens":[{"id":"gitlens.views.repositories:gitlens","name":"Repositories","when":"config.gitlens.views.repositories.enabled && config.gitlens.views.repositories.location == gitlens"},{"id":"gitlens.views.fileHistory:gitlens","name":"File History","when":"config.gitlens.views.fileHistory.enabled && config.gitlens.views.fileHistory.location == gitlens"},{"id":"gitlens.views.lineHistory:gitlens","name":"Line History","when":"config.gitlens.views.lineHistory.enabled && config.gitlens.views.lineHistory.location == gitlens"},{"id":"gitlens.views.compare:gitlens","name":"Compare","when":"config.gitlens.views.compare.enabled && config.gitlens.views.compare.location == gitlens"},{"id":"gitlens.views.search:gitlens","name":"Search Commits","when":"config.gitlens.views.search.enabled && config.gitlens.views.search.location == gitlens"}],"explorer":[{"id":"gitlens.views.repositories:explorer","name":"GitLens: Repositories","when":"gitlens:enabled && config.gitlens.views.repositories.enabled && config.gitlens.views.repositories.location == explorer"},{"id":"gitlens.views.fileHistory:explorer","name":"GitLens: File History","when":"gitlens:enabled && config.gitlens.views.fileHistory.enabled && config.gitlens.views.fileHistory.location == explorer"},{"id":"gitlens.views.lineHistory:explorer","name":"GitLens: Line History","when":"gitlens:enabled && config.gitlens.views.lineHistory.enabled && config.gitlens.views.lineHistory.location == explorer"},{"id":"gitlens.views.compare:explorer","name":"GitLens: Compare","when":"gitlens:enabled && config.gitlens.views.compare.enabled && config.gitlens.views.compare.location == explorer"},{"id":"gitlens.views.search:explorer","name":"GitLens: Search Commits","when":"gitlens:enabled && config.gitlens.views.search.enabled && config.gitlens.views.search.location == explorer"}],"scm":[{"id":"gitlens.views.repositories:scm","name":"GitLens: Repositories","when":"gitlens:enabled && config.gitlens.views.repositories.enabled && config.gitlens.views.repositories.location == scm"},{"id":"gitlens.views.fileHistory:scm","name":"GitLens: File History","when":"gitlens:enabled && config.gitlens.views.fileHistory.enabled && config.gitlens.views.fileHistory.location == scm"},{"id":"gitlens.views.lineHistory:scm","name":"GitLens: Line History","when":"gitlens:enabled && config.gitlens.views.lineHistory.enabled && config.gitlens.views.lineHistory.location == scm"},{"id":"gitlens.views.compare:scm","name":"GitLens: Compare","when":"gitlens:enabled && config.gitlens.views.compare.enabled && config.gitlens.views.compare.location == scm"},{"id":"gitlens.views.search:scm","name":"GitLens: Search Commits","when":"gitlens:enabled && config.gitlens.views.search.enabled && config.gitlens.views.search.location == scm"}]}},"scripts":{"build":"webpack --env.development","bundle":"webpack --env.production","clean":"git clean -Xdf -e !.cache-images -e !node_modules -e !node_modules/**/*","lint":"tslint --project tsconfig.json && tslint --project ui.tsconfig.json","pack":"vsce package","pretty":"prettier --config .prettierrc --loglevel warn --write \"./**/*.{ts,md,json}\" && tslint --project tsconfig.json --fix && tslint --project ui.tsconfig.json --fix","pub":"vsce publish","rebuild":"npm run reset && npm run build","reset":"npm run clean && npm install --no-save","watch":"webpack --watch --env.development --info-verbosity verbose","ui:optimize":"webpack --config-name ui --env.optimizeImages","ui:watch":"webpack --watch --config-name ui --env.development --info-verbosity verbose","update:emoji":"pushd emoji && node ./shortcodeToEmoji.js && popd","postinstall":"node ./node_modules/vscode/bin/install","vscode:prepublish":"npm run reset && npm run bundle"},"dependencies":{"date-fns":"1.30.1","iconv-lite":"0.4.24","lodash-es":"4.17.11","tslib":"1.9.3","vsls":"0.3.967"},"devDependencies":{"@types/lodash-es":"4.17.1","@types/node":"10.1.4","clean-webpack-plugin":"1.0.1","css-loader":"2.1.0","html-webpack-inline-source-plugin":"0.0.10","html-webpack-plugin":"3.2.0","imagemin-webpack-plugin":"2.4.2","mini-css-extract-plugin":"0.5.0","node-sass":"4.11.0","prettier":"1.16.4","prettier-tslint":"0.4.2","sass-loader":"7.1.0","terser-webpack-plugin":"1.2.2","tslint":"5.12.1","tslint-loader":"3.5.4","tslint-prettiest":"0.0.1","ts-loader":"5.3.3","typescript":"3.2.4","vsce":"1.57.0","vscode":"1.1.29","webpack":"4.29.3","webpack-cli":"3.2.3"},"uuid":"4de763bd-505d-4978-9575-2b7696ecf94e","isBuiltin":false,"isUnderDevelopment":false,"id":"eamodio.gitlens","identifier":{"value":"eamodio.gitlens","_lower":"eamodio.gitlens"},"extensionLocation":{"$mid":1,"fsPath":"/home/miri/.vscode/extensions/eamodio.gitlens-9.5.1","path":"/home/miri/.vscode/extensions/eamodio.gitlens-9.5.1","scheme":"file"}},{"name":"EditorConfig","displayName":"EditorConfig for VS Code","description":"EditorConfig Support for Visual Studio Code","publisher":"EditorConfig","version":"0.13.0","icon":"EditorConfig_icon.png","engines":{"vscode":"^1.31.1"},"author":"EditorConfig Team","license":"MIT","categories":["Other"],"keywords":["editor","config","multi-root ready"],"homepage":"https://github.com/editorconfig/editorconfig-vscode/blob/master/README.md","repository":{"type":"git","url":"https://github.com/editorconfig/editorconfig-vscode.git"},"bugs":{"url":"https://github.com/editorconfig/editorconfig-vscode/issues"},"galleryBanner":{"color":"#37699A","theme":"dark"},"activationEvents":["*"],"main":"/home/miri/.vscode/extensions/editorconfig.editorconfig-0.13.0/out/src/editorConfigMain","types":"./out/src/editorConfigMain.d.ts","contributes":{"commands":[{"command":"EditorConfig.generate","title":"Generate .editorconfig"}],"menus":{"commandPalette":[{"command":"EditorConfig.generate","when":"explorerResourceIsFolder"}],"explorer/context":[{"command":"EditorConfig.generate","when":"explorerResourceIsFolder","group":"EditorConfig@1"}]}},"dependencies":{"editorconfig":"^0.15.2","lodash.compact":"^3.0.1","lodash.get":"^4.4.2"},"devDependencies":{"@types/lodash":"^4.14.121","@types/mocha":"^5.2.6","@types/node":"^10.12.26","rimraf":"^2.6.3","tslint":"^5.12.1","typescript":"^3.3.3","vscode":"^1.1.29","vscode-test-utils":"0.0.9"},"scripts":{"postinstall":"node ./node_modules/vscode/bin/install","precompile":"rimraf ./out","compile":"tsc","lint":"tslint --project tsconfig.json","pretest":"npm run lint && npm run compile","test":"node ./node_modules/vscode/bin/test","vscode:prepublish":"npm run compile"},"uuid":"f60a60a6-95ba-42d4-b41c-3d24c1b89588","isBuiltin":false,"isUnderDevelopment":false,"id":"EditorConfig.EditorConfig","identifier":{"value":"EditorConfig.EditorConfig","_lower":"editorconfig.editorconfig"},"extensionLocation":{"$mid":1,"fsPath":"/home/miri/.vscode/extensions/editorconfig.editorconfig-0.13.0","path":"/home/miri/.vscode/extensions/editorconfig.editorconfig-0.13.0","scheme":"file"}},{"name":"beautify","displayName":"Beautify","description":"Beautify code in place for VS Code","version":"1.4.9","publisher":"HookyQR","engines":{"vscode":"^1.22.0"},"categories":["Other","Programming Languages","Formatters"],"activationEvents":["*"],"icon":"icon.png","galleryBanner":{"color":"#e8e030","theme":"light"},"license":"MIT","main":"/home/miri/.vscode/extensions/hookyqr.beautify-1.4.9/extension","contributes":{"languages":[{"id":"json","aliases":["JSON"],"filenames":[".jsbeautifyrc",".jshintrc"]}],"jsonValidation":[{"fileMatch":".jsbeautifyrc","url":"./schema/beautifyrc.json"}],"commands":[{"command":"HookyQR.beautify","title":"Beautify selection"},{"command":"HookyQR.beautifyFile","title":"Beautify file"}],"configuration":{"type":"object","title":"Beautify config","properties":{"beautify.ignore":{"type":["string","array"],"items":{"type":"string"},"default":[],"description":"List of paths to ignore when using VS Code format command, including format on save. Uses glob pattern matching.","scope":"resource"},"beautify.config":{"type":["string","object","null"],"default":null,"description":"A path to a file, or an object containing the configuration options for js-beautify. If the .jsbeautifyrc file exists in project root, it overrides this configuration."},"beautify.language":{"type":"object","description":"Link file types to the beautifier type","default":{"js":{"type":["javascript","json","jsonc"],"filename":[".jshintrc",".jsbeautifyrc"]},"css":["css","less","scss"],"html":["htm","html"]},"properties":{"js":{"type":["object","array"],"items":{"type":"string"},"description":"Array of language types, or an object containing types, extensions and filenames to associate","properties":{"type":{"type":"array","items":{"type":"string"},"description":"VS Code language name"},"ext":{"type":"array","items":{"type":"string"},"description":"File extensions (without the leading dot)"},"filename":{"type":"array","items":{"type":"string"},"description":"Full filenames (eg: '.jsbeautifyrc')"}}},"css":{"type":["object","array"],"items":{"type":"string"},"description":"Array of language types, or an object containing types, extensions and filenames to associate","properties":{"type":{"type":"array","items":{"type":"string"},"description":"VS Code language name"},"ext":{"type":"array","items":{"type":"string"},"description":"File extensions (without the leading dot)"},"filename":{"type":"array","items":{"type":"string"},"description":"Full filenames (eg: '.jsbeautifyrc')"}}},"html":{"type":["object","array"],"items":{"type":"string"},"description":"Array of language types, or an object containing types, extensions and filenames to associate","properties":{"type":{"type":"array","items":{"type":"string"},"description":"VS Code language name"},"ext":{"type":"array","items":{"type":"string"},"description":"File extensions (without the leading dot)"},"filename":{"type":"array","items":{"type":"string"},"description":"Full filenames (eg: '.jsbeautifyrc')"}}}}}}}},"dependencies":{"editorconfig":"0.15.0","js-beautify":"^1.8.9","minimatch":"^3.0.4"},"devDependencies":{"@types/mocha":"^2.2.42","@types/node":"^8.10.36","expect.js":"^0.3.1","mocha":"^5.2.0","typescript":"^2.6.1","vscode":"~1.1.18"},"scripts":{"postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"repository":{"type":"git","url":"https://github.com/HookyQR/VSCodeBeautify"},"bugs":{"url":"https://github.com/HookyQR/VSCodeBeautify/issues"},"uuid":"697255a9-3f36-44c8-b084-d3b91edfb23a","isBuiltin":false,"isUnderDevelopment":false,"id":"HookyQR.beautify","identifier":{"value":"HookyQR.beautify","_lower":"hookyqr.beautify"},"extensionLocation":{"$mid":1,"fsPath":"/home/miri/.vscode/extensions/hookyqr.beautify-1.4.9","path":"/home/miri/.vscode/extensions/hookyqr.beautify-1.4.9","scheme":"file"}},{"name":"HTMLHint","displayName":"HTMLHint","description":"VS Code integration for HTMLHint - A Static Code Analysis Tool for HTML","icon":"HTMLHint.png","version":"0.5.0","publisher":"mkaufman","galleryBanner":{"color":"#0000FF","theme":"dark"},"license":"SEE LICENSE IN LICENSE.md","bugs":{"url":"https://github.com/Microsoft/vscode-htmlhint/issues","email":"mkaufman@microsoft.com"},"homepage":"https://github.com/Microsoft/vscode-htmlhint/blob/master/README.md","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-htmlhint.git"},"categories":["Languages","Linters"],"engines":{"vscode":"^1.16.0"},"activationEvents":["onLanguage:html"],"main":"/home/miri/.vscode/extensions/mkaufman.htmlhint-0.5.0/out/extension","contributes":{"configuration":{"type":"object","title":"HTML-Hint configuration","properties":{"htmlhint.enable":{"type":"boolean","default":true,"description":"Control whether htmlhint is enabled for HTML files or not."},"htmlhint.documentSelector":{"type":"array","default":["html","htm"],"description":"The associated document types to be linted."},"htmlhint.options":{"type":"object","default":{},"description":"The htmlhint options object to provide args to the htmlhint command."}}}},"scripts":{"vscode:prepublish":"node ./node_modules/typescript/bin/tsc -p ./","compile":"node ./node_modules/typescript/bin/tsc -p ./","watch":"node ./node_modules/typescript/bin/tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"typescript":"^2.5.2","vscode":"^1.1.5","@types/node":"^6.0.41"},"dependencies":{"vsce":"^1.39.0","vscode-languageclient":"^3.4.0"},"uuid":"0ec558c9-f7f7-4df3-b2cf-a41ddcf292dd","isBuiltin":false,"isUnderDevelopment":false,"id":"mkaufman.HTMLHint","identifier":{"value":"mkaufman.HTMLHint","_lower":"mkaufman.htmlhint"},"extensionLocation":{"$mid":1,"fsPath":"/home/miri/.vscode/extensions/mkaufman.htmlhint-0.5.0","path":"/home/miri/.vscode/extensions/mkaufman.htmlhint-0.5.0","scheme":"file"}},{"name":"vscode-typescript-tslint-plugin","version":"1.0.0","private":true,"displayName":"TSLint","description":"TSLint support for Visual Studio Code","publisher":"ms-vscode","icon":"docs/icon.png","license":"MIT","galleryBanner":{"color":"#fcfcfc","theme":"light"},"repository":{"url":"https://github.com/Microsoft/vscode-typescript-tslint-plugin.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-typescript-tslint-plugin/issues"},"categories":["Programming Languages"],"keywords":["tslint","typescript","lint","ts","linters"],"engines":{"vscode":"^1.30.0"},"activationEvents":["onLanguage:javascript","onLanguage:javascriptreact","onLanguage:typescript","onLanguage:typescriptreact"],"main":"/home/miri/.vscode/extensions/ms-vscode.vscode-typescript-tslint-plugin-1.0.0/out/index.js","contributes":{"languages":[{"id":"jsonc","filenames":["tslint.json"]}],"jsonValidation":[{"fileMatch":"tslint.json","url":"http://json.schemastore.org/tslint"},{"fileMatch":"jsconfig*.json","url":"./schemas/tsconfig.schema.json"},{"fileMatch":"tsconfig*.json","url":"./schemas/tsconfig.schema.json"}],"problemPatterns":[{"name":"tslint4","regexp":"^(\\(\\S*\\)\\s+)?(\\S.*)\\[(\\d+), (\\d+)\\]:\\s+(.*)$","file":2,"line":3,"column":4,"message":5},{"name":"tslint5","regexp":"^(WARNING|ERROR):(\\s+\\(\\S*\\))?\\s+(\\S.*)\\[(\\d+), (\\d+)\\]:\\s+(.*)$","severity":1,"file":3,"line":4,"column":5,"message":6}],"problemMatchers":[{"name":"tslint4","label":"tslint (version 4) warnings","owner":"tslint","source":"tslint","applyTo":"closedDocuments","fileLocation":"absolute","severity":"warning","pattern":"$tslint4"},{"name":"tslint5","owner":"tslint","source":"tslint","label":"tslint (version 5) warnings","applyTo":"closedDocuments","fileLocation":"absolute","severity":"warning","pattern":"$tslint5"}],"typescriptServerPlugins":[{"name":"typescript-tslint-plugin","enableForWorkspaceTypeScriptVersions":true}],"configuration":{"type":"object","title":"TSLint","properties":{"tslint.jsEnable":{"type":"boolean","description":"Control whether tslint is enabled for JavaScript files or not."},"tslint.configFile":{"type":"string","description":"The path to the rules configuration file"},"tslint.ignoreDefinitionFiles":{"type":"boolean","description":"Control if TypeScript definition files should be ignored."},"tslint.exclude":{"description":"A glob or an array of globs. Any file matching these globs will not be linted.","anyOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}]},"tslint.alwaysShowRuleFailuresAsWarnings":{"type":"boolean","description":"Always show rule failures as warnings, independent of the tslint configuration.","default":true},"tslint.suppressWhileTypeErrorsPresent":{"type":"boolean","description":"Always show rule failures as warnings, independent of the tslint configuration."}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -p ./","watch":"tsc -w -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"dependencies":{"typescript-tslint-plugin":"0.3.1"},"devDependencies":{"typescript":"^3.1.6","vscode":"^1.1.22"},"uuid":"90a37ca1-92a2-488a-b196-7a8c0b0127ea","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.vscode-typescript-tslint-plugin","identifier":{"value":"ms-vscode.vscode-typescript-tslint-plugin","_lower":"ms-vscode.vscode-typescript-tslint-plugin"},"extensionLocation":{"$mid":1,"fsPath":"/home/miri/.vscode/extensions/ms-vscode.vscode-typescript-tslint-plugin-1.0.0","path":"/home/miri/.vscode/extensions/ms-vscode.vscode-typescript-tslint-plugin-1.0.0","scheme":"file"}},{"name":"vscode-docker","version":"0.5.2","publisher":"PeterJausovec","displayName":"Docker","description":"Adds syntax highlighting, commands, hover tips, and linting for Dockerfile and docker-compose files.","license":"SEE LICENSE IN LICENSE.md","icon":"images/docker_icon.png","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","galleryBanner":{"color":"#1289B9","theme":"dark"},"categories":["Programming Languages","Linters","Azure"],"keywords":["docker","compose","container","multi-root ready"],"repository":{"type":"git","url":"https://github.com/microsoft/vscode-docker"},"homepage":"https://github.com/Microsoft/vscode-docker/blob/master/README.md","activationEvents":["onCommand:vscode-docker.acr.createRegistry","onCommand:vscode-docker.acr.deleteImage","onCommand:vscode-docker.acr.deleteRegistry","onCommand:vscode-docker.acr.deleteRepository","onCommand:vscode-docker.acr.pullImage","onCommand:vscode-docker.acr.pullRepo","onCommand:vscode-docker.acr.quickBuild","onCommand:vscode-docker.acr.runTask","onCommand:vscode-docker.acr.runTaskFile","onCommand:vscode-docker.acr.showTask","onCommand:vscode-docker.acr.untagImage","onCommand:vscode-docker.acr.viewLogs","onCommand:vscode-docker.api.configure","onCommand:vscode-docker.browseAzurePortal","onCommand:vscode-docker.browseDockerHub","onCommand:vscode-docker.compose.down","onCommand:vscode-docker.compose.restart","onCommand:vscode-docker.compose.up","onCommand:vscode-docker.configure","onCommand:vscode-docker.connectCustomRegistry","onCommand:vscode-docker.container.open-shell","onCommand:vscode-docker.container.remove","onCommand:vscode-docker.container.restart","onCommand:vscode-docker.container.show-logs","onCommand:vscode-docker.container.start","onCommand:vscode-docker.container.start.azurecli","onCommand:vscode-docker.container.start.interactive","onCommand:vscode-docker.container.stop","onCommand:vscode-docker.createWebApp","onCommand:vscode-docker.disconnectCustomRegistry","onCommand:vscode-docker.dockerHubLogout","onCommand:vscode-docker.explorer.refresh","onCommand:vscode-docker.image.build","onCommand:vscode-docker.image.inspect","onCommand:vscode-docker.image.push","onCommand:vscode-docker.image.remove","onCommand:vscode-docker.image.tag","onCommand:vscode-docker.setRegistryAsDefault","onCommand:vscode-docker.system.prune","onDebugInitialConfigurations","onDebugResolve:docker-coreclr","onLanguage:dockerfile","onLanguage:yaml","onView:dockerExplorer"],"main":"/home/miri/.vscode/extensions/peterjausovec.vscode-docker-0.5.2/entrypoint","contributes":{"menus":{"commandPalette":[{"command":"vscode-docker.api.configure","when":"never"},{"command":"vscode-docker.browseDockerHub","when":"false"},{"command":"vscode-docker.createWebApp","when":"false"}],"editor/context":[{"when":"editorLangId == dockerfile && isAzureAccountInstalled","command":"vscode-docker.acr.quickBuild","group":"docker"},{"when":"editorLangId == yaml","command":"vscode-docker.acr.runTaskFile","group":"docker"},{"when":"resourceFilename == docker-compose.yml","command":"vscode-docker.compose.down","group":"docker"},{"when":"resourceFilename == docker-compose.yml","command":"vscode-docker.compose.restart","group":"docker"},{"when":"resourceFilename == docker-compose.yml","command":"vscode-docker.compose.up","group":"docker"},{"when":"resourceFilename == docker-compose.debug.yml","command":"vscode-docker.compose.down","group":"docker"},{"when":"resourceFilename == docker-compose.debug.yml","command":"vscode-docker.compose.restart","group":"docker"},{"when":"resourceFilename == docker-compose.debug.yml","command":"vscode-docker.compose.up","group":"docker"},{"when":"editorLangId == dockerfile","command":"vscode-docker.image.build","group":"docker"}],"explorer/context":[{"when":"resourceFilename =~ /(^|\\.)dockerfile$/i","command":"vscode-docker.acr.quickBuild","group":"docker"},{"when":"resourceFilename =~ /^(?:(?!^docker-compose\\.ya?ml$).)*\\.ya?ml$/i","command":"vscode-docker.acr.runTaskFile","group":"docker"},{"when":"resourceFilename =~ /docker-compose/i","command":"vscode-docker.compose.down","group":"docker"},{"when":"resourceFilename =~ /docker-compose/i","command":"vscode-docker.compose.restart","group":"docker"},{"when":"resourceFilename =~ /docker-compose/i","command":"vscode-docker.compose.up","group":"docker"},{"when":"resourceFilename =~ /dockerfile/i","command":"vscode-docker.image.build","group":"docker"}],"view/title":[{"command":"vscode-docker.explorer.refresh","when":"view == dockerExplorer","group":"navigation"},{"command":"vscode-docker.system.prune","when":"view == dockerExplorer","group":"navigation"}],"view/item/context":[{"command":"vscode-docker.acr.createRegistry","when":"view == dockerExplorer && viewItem == azureRegistryRootNode"},{"command":"vscode-docker.acr.deleteImage","when":"view == dockerExplorer && viewItem == azureImageTagNode"},{"command":"vscode-docker.acr.deleteRegistry","when":"view == dockerExplorer && viewItem == azureRegistryNode"},{"command":"vscode-docker.acr.deleteRepository","when":"view == dockerExplorer && viewItem == azureRepositoryNode"},{"command":"vscode-docker.acr.pullImage","when":"view == dockerExplorer && viewItem == azureImageTagNode"},{"command":"vscode-docker.acr.pullRepo","when":"view == dockerExplorer && viewItem == azureRepositoryNode"},{"command":"vscode-docker.acr.runTask","when":"view == dockerExplorer && viewItem == taskNode"},{"command":"vscode-docker.acr.showTask","when":"view == dockerExplorer && viewItem == taskNode"},{"command":"vscode-docker.acr.untagImage","when":"view == dockerExplorer && viewItem == azureImageTagNode"},{"command":"vscode-docker.acr.viewLogs","when":"view == dockerExplorer && viewItem =~ /^(azureRegistryNode|azureImageTagNode|taskNode)$/"},{"command":"vscode-docker.browseDockerHub","when":"view == dockerExplorer && viewItem =~ /^(dockerHubImageTagNode|dockerHubRepositoryNode|dockerHubOrgNode)$/"},{"command":"vscode-docker.browseAzurePortal","when":"view == dockerExplorer && viewItem =~ /^(azureRegistryNode|azureRepositoryNode|azureImageTagNode)$/"},{"command":"vscode-docker.connectCustomRegistry","when":"view == dockerExplorer && viewItem == customRootNode"},{"command":"vscode-docker.container.open-shell","when":"view == dockerExplorer && viewItem =~ /^(runningLocalContainerNode|containersRootNode)$/"},{"command":"vscode-docker.container.remove","when":"view == dockerExplorer && viewItem =~ /^(stoppedLocalContainerNode|runningLocalContainerNode|containersRootNode)$/"},{"command":"vscode-docker.container.restart","when":"view == dockerExplorer && viewItem =~ /^(runningLocalContainerNode|stoppedLocalContainerNode|containersRootNode)$/"},{"command":"vscode-docker.container.show-logs","when":"view == dockerExplorer && viewItem =~ /^(runningLocalContainerNode|stoppedLocalContainerNode|containersRootNode)$/"},{"command":"vscode-docker.container.start","when":"view == dockerExplorer && viewItem =~ /^(localImageNode|imagesRootNode)$/"},{"command":"vscode-docker.container.start.interactive","when":"view == dockerExplorer && viewItem =~ /^(localImageNode|imagesRootNode)$/"},{"command":"vscode-docker.container.stop","when":"view == dockerExplorer && viewItem =~ /^(runningLocalContainerNode|containersRootNode)$/"},{"command":"vscode-docker.createWebApp","when":"view == dockerExplorer && viewItem =~ /^(azureImageTagNode|dockerHubImageTagNode|customImageTagNode)$/"},{"command":"vscode-docker.disconnectCustomRegistry","when":"view == dockerExplorer && viewItem =~ /^(customRegistryNode)$/"},{"command":"vscode-docker.dockerHubLogout","when":"view == dockerExplorer && viewItem == dockerHubRootNode"},{"command":"vscode-docker.image.inspect","when":"view == dockerExplorer && viewItem =~ /^(localImageNode|imagesRootNode)$/"},{"command":"vscode-docker.image.push","when":"view == dockerExplorer && viewItem =~ /^(localImageNode|imagesRootNode)$/"},{"command":"vscode-docker.image.remove","when":"view == dockerExplorer && viewItem =~ /^(localImageNode|imagesRootNode)$/"},{"command":"vscode-docker.image.tag","when":"view == dockerExplorer && viewItem =~ /^(localImageNode|imagesRootNode)$/"},{"command":"vscode-docker.setRegistryAsDefault","when":"view == dockerExplorer && viewItem =~ /^(customRegistryNode|azureRegistryNode|dockerHubOrgNode)$/"}]},"debuggers":[{"type":"docker","label":"Docker: Node.js","configurationSnippets":[{"label":"Docker: Attach to Node","description":"Docker: Attach to Node","body":{"type":"node","request":"attach","name":"Docker: Attach to Node","remoteRoot":"/usr/src/app"}}]},{"type":"docker-coreclr","label":"Docker: Launch .NET Core (Preview)","configurationSnippets":[{"label":"Docker: Launch .NET Core (Preview)","description":"Docker: Launch .NET Core (Preview)","body":{"name":"Docker: Launch .NET Core (Preview)","type":"docker-coreclr","request":"launch","preLaunchTask":"build","dockerBuild":{},"dockerRun":{}}}],"configurationAttributes":{"launch":{"properties":{"appFolder":{"type":"string","description":"Path to the folder for the application."},"appOutput":{"type":"string","description":"Path to the output assembly for the application."},"appProject":{"type":"string","description":"Path to the application project file."},"dockerBuild":{"description":"Options for building the Docker image used for debugging.","properties":{"args":{"type":"object","description":"Build arguments applied to the Docker image used for debugging.","additionalProperties":{"type":"string"}},"context":{"type":"string","description":"Path to the Docker build context."},"dockerfile":{"type":"string","description":"Path to the Dockerfile used for the build."},"labels":{"type":"object","description":"Labels applied to the Docker image used for debugging.","additionalProperties":{"type":"string"}},"tag":{"type":"string","description":"Tag applied to the Docker image used for debugging."},"target":{"type":"string","description":"Docker build target (stage) used for debugging."}}},"dockerRun":{"description":"Options for running the Docker container used for debugging.","properties":{"containerName":{"type":"string","description":"Name of the container used for debugging."},"env":{"type":"object","description":"Environment variables applied to the Docker container used for debugging.","additionalProperties":{"type":"string"}},"envFiles":{"type":"array","description":"Files of environment variables read in and applied to the Docker container used for debugging.","items":{"type":"string"}},"labels":{"type":"object","description":"Labels applied to the Docker container used for debugging.","additionalProperties":{"type":"string"}}}}}}}}],"languages":[{"id":"dockerfile","aliases":["Dockerfile"],"filenamePatterns":["*.dockerfile","Dockerfile"]},{"id":"ignore","filenames":[".dockerignore"]}],"configuration":{"type":"object","title":"Docker configuration options","properties":{"docker.defaultRegistryPath":{"type":"string","default":"","description":"Default registry and path when tagging an image"},"docker.showExplorer":{"type":"boolean","default":true,"description":"Show or hide the Explorer"},"docker.explorerRefreshInterval":{"type":"number","default":1000,"description":"Explorer refresh interval, default is 1000ms"},"docker.imageBuildContextPath":{"type":"string","default":"","description":"Build context PATH to pass to Docker build command"},"docker.truncateLongRegistryPaths":{"type":"boolean","default":false,"description":"Truncate long Image and Container registry paths in the Explorer"},"docker.truncateMaxLength":{"type":"number","default":10,"description":"Maximum number of characters for long registry paths in the Explorer, including elipsis"},"docker.host":{"type":"string","default":"","description":"Host to connect to (same as setting the DOCKER_HOST environment variable)"},"docker.importCertificates":{"oneOf":[{"type":"boolean"},{"type":"object","properties":{"useCertificateStore":{"type":"boolean","default":true,"description":"On Mac and Windows, indicates whether to automatically import certificates from the system certificate store. Ignored on Linux."},"certificatePaths":{"type":"array","items":{"type":"string"},"default":["/etc/ssl/certs/ca-certificates","/etc/openssl/certs","/etc/pki/tls/certs","/usr/local/share/certs"],"description":"Paths to files or folders containing certificates to import. For Linux, the correct path to pick up system-wide certificates will depend on the distribution."}}}],"default":false,"description":"True causes the extension to attempt to find system-wide certificates, false indicates that the default Node.js trusted certificates list will be used. Use an object to get more fine-grained control."},"docker.languageserver.diagnostics.deprecatedMaintainer":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for the deprecated MAINTAINER instruction"},"docker.languageserver.diagnostics.emptyContinuationLine":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for flagging empty continuation lines found in instructions that span multiple lines"},"docker.languageserver.diagnostics.directiveCasing":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for parser directives that are not written in lowercase"},"docker.languageserver.diagnostics.instructionCasing":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for instructions that are not written in uppercase"},"docker.languageserver.diagnostics.instructionCmdMultiple":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for flagging a Dockerfile with multiple CMD instructions"},"docker.languageserver.diagnostics.instructionEntrypointMultiple":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for flagging a Dockerfile with multiple ENTRYPOINT instructions"},"docker.languageserver.diagnostics.instructionHealthcheckMultiple":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for flagging a Dockerfile with multiple HEALTHCHECK instructions"},"docker.languageserver.diagnostics.instructionJSONInSingleQuotes":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for JSON instructions that are written incorrectly with single quotes"},"docker.languageserver.diagnostics.instructionWorkdirRelative":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for WORKDIR instructions that do not point to an absolute path"},"docker.attachShellCommand.linuxContainer":{"type":"string","default":"/bin/sh -c \"[ -e /bin/bash ] && /bin/bash || /bin/sh\"","description":"Attach command to use for Linux containers"},"docker.attachShellCommand.windowsContainer":{"type":"string","default":"powershell","description":"Attach command to use for Windows containers"},"docker.promptOnSystemPrune":{"type":"boolean","default":true,"description":"Prompt for confirmation when running System Prune command"},"docker.dockerComposeBuild":{"type":"boolean","default":true,"description":"Run docker-compose with the --build argument, defaults to true"},"docker.dockerComposeDetached":{"type":"boolean","default":true,"description":"Run docker-compose with the --d (detached) argument, defaults to true"}}},"commands":[{"command":"vscode-docker.acr.createRegistry","title":"Create Azure Registry","category":"Docker"},{"command":"vscode-docker.acr.deleteImage","title":"Delete Azure Image","category":"Docker"},{"command":"vscode-docker.acr.deleteRegistry","title":"Delete Azure Registry","category":"Docker"},{"command":"vscode-docker.acr.deleteRepository","title":"Delete Azure Repository","category":"Docker"},{"command":"vscode-docker.acr.pullImage","title":"Pull tag from Azure","category":"Docker"},{"command":"vscode-docker.acr.pullRepo","title":"Pull Repository from Azure","description":"Pull all Image tags from an Azure Repository","category":"Docker"},{"command":"vscode-docker.acr.quickBuild","title":"ACR Tasks: Build Image","description":"Queue an Azure build from a Dockerfile","category":"Docker"},{"command":"vscode-docker.acr.runTask","title":"Run Task","category":"Docker"},{"command":"vscode-docker.acr.runTaskFile","title":"Run ACR Task File","description":"Run an ACR task from a yaml file.","category":"Docker"},{"command":"vscode-docker.acr.showTask","title":"Show Task Properties","category":"Docker"},{"command":"vscode-docker.acr.untagImage","title":"Untag Azure Image","category":"Docker"},{"command":"vscode-docker.acr.viewLogs","title":"View Task Logs","category":"Docker"},{"command":"vscode-docker.api.configure","title":"Add Docker Files to Workspace (API)"},{"command":"vscode-docker.browseDockerHub","title":"Browse in Docker Hub","category":"Docker"},{"command":"vscode-docker.browseAzurePortal","title":"Browse in the Azure Portal","category":"Docker"},{"command":"vscode-docker.compose.down","title":"Compose Down","description":"Stops a composition of containers","category":"Docker"},{"command":"vscode-docker.compose.restart","title":"Compose Restart","description":"Restarts a composition of containers","category":"Docker"},{"command":"vscode-docker.compose.up","title":"Compose Up","description":"Starts a composition of containers","category":"Docker"},{"command":"vscode-docker.configure","title":"Add Docker Files to Workspace","description":"Add Dockerfile, docker-compose.yml files","category":"Docker"},{"command":"vscode-docker.connectCustomRegistry","title":"Connect to a Private Registry... (Preview)","category":"Docker"},{"command":"vscode-docker.container.open-shell","title":"Attach Shell","description":"Open a terminal with an interactive shell for a running container","category":"Docker"},{"command":"vscode-docker.container.remove","title":"Remove Container","description":"Remove a stopped container","category":"Docker"},{"command":"vscode-docker.container.restart","title":"Restart Container","description":"Restart one or more containers","category":"Docker"},{"command":"vscode-docker.container.show-logs","title":"Show Logs","description":"Show the logs of a running container","category":"Docker"},{"command":"vscode-docker.container.start","title":"Run","description":"Starts a container from an image","category":"Docker"},{"command":"vscode-docker.container.start.azurecli","title":"Azure CLI","description":"Starts a container from the Azure CLI image and runs it interactively","category":"Docker"},{"command":"vscode-docker.container.start.interactive","title":"Run Interactive","description":"Starts a container from an image and runs it interactively","category":"Docker"},{"command":"vscode-docker.container.stop","title":"Stop Container","description":"Stop a running container","category":"Docker"},{"command":"vscode-docker.createWebApp","title":"Deploy Image to Azure App Service","category":"Docker"},{"command":"vscode-docker.disconnectCustomRegistry","title":"Disconnect from Private Registry","category":"Docker"},{"command":"vscode-docker.dockerHubLogout","title":"Docker Hub Logout","category":"Docker"},{"command":"vscode-docker.explorer.refresh","title":"Refresh Explorer","category":"Docker","icon":{"light":"images/light/refresh.svg","dark":"images/dark/refresh.svg"}},{"command":"vscode-docker.image.build","title":"Build Image","description":"Build a Docker image from a Dockerfile","category":"Docker"},{"command":"vscode-docker.image.inspect","title":"Inspect Image","description":"Inspect the metadata of a Docker image","category":"Docker"},{"command":"vscode-docker.image.push","title":"Push","description":"Push an image to a registry","category":"Docker"},{"command":"vscode-docker.image.remove","title":"Remove Image","description":"Remove a Docker image","category":"Docker"},{"command":"vscode-docker.image.tag","title":"Tag Image","description":"Tag a Docker image","category":"Docker"},{"command":"vscode-docker.setRegistryAsDefault","title":"Set as Default Registry Path","category":"Docker"},{"command":"vscode-docker.system.prune","title":"System Prune","category":"Docker","icon":{"light":"images/light/prune.svg","dark":"images/dark/prune.svg"}}],"views":{"dockerView":[{"id":"dockerExplorer","name":"Explorer","when":"config.docker.showExplorer == true"}]},"viewsContainers":{"activitybar":[{"icon":"images/docker.svg","id":"dockerView","title":"Docker"}]}},"engines":{"vscode":"^1.26.0"},"scripts":{"vscode:prepublish":"npm run webpack-prod","build":"tsc -p ./","compile":"tsc -watch -p ./","package":"vsce package","lint":"tslint --project tsconfig.json -t verbose","lint-fix":"tslint --project tsconfig.json -t verbose --fix","postinstall":"node ./node_modules/vscode/bin/install","pretest":"npm run build && npm run webpack","test":"gulp test","all":"npm i && npm run lint && npm test","webpack":"gulp webpack-dev","webpack-prod":"gulp webpack-prod","webpack-profile":"webpack --profile --json --mode production > webpack-stats.json && echo Use http://webpack.github.io/analyse to analyze the stats"},"extensionDependencies":["vscode.docker","vscode.yaml"],"devDependencies":{"@types/adm-zip":"^0.4.31","@types/deep-equal":"^1.0.1","@types/dockerode":"^2.5.5","@types/fs-extra":"^5.0.4","@types/glob":"5.0.35","@types/keytar":"^4.0.1","@types/mocha":"^5.2.5","@types/node":"^8.10.34","@types/request-promise-native":"^1.0.15","@types/semver":"^5.5.0","@types/xml2js":"^0.4.3","adm-zip":"^0.4.11","clean-webpack-plugin":"^0.1.19","copy-webpack-plugin":"^4.5.4","gulp":"^4.0.0","gulp-decompress":"^2.0.2","gulp-download":"^0.0.1","mocha":"^5.2.0","mocha-junit-reporter":"^1.18.0","mocha-multi-reporters":"^1.1.7","string-replace-webpack-plugin":"^0.1.3","ts-loader":"^5.3.0","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-microsoft-contrib":"^6.0.0","typescript":"^3.1.1","umd-compat-loader":"^2.1.1","vsce":"^1.51.1","vscode":"^1.1.18","webpack":"^4.25.1","webpack-cli":"^3.1.2"},"dependencies":{"adal-node":"^0.1.28","azure-arm-containerregistry":"^3.0.0","azure-arm-resource":"^2.0.0-preview","azure-arm-website":"^1.0.0-preview","azure-storage":"^2.8.1","clipboardy":"^1.2.3","deep-equal":"^1.0.1","dockerfile-language-server-nodejs":"^0.0.19","dockerode":"^2.5.1","fs-extra":"^6.0.1","glob":"7.1.2","gradle-to-js":"^1.0.1","mac-ca":"^1.0.4","moment":"^2.19.3","ms-rest":"^2.3.8","ms-rest-azure":"^2.5.9","opn":"^5.2.0","request":"^2.88.0","request-promise-native":"^1.0.5","semver":"^5.5.1","tar":"^4.4.6","vscode-azureextensionui":"^0.19.0","vscode-languageclient":"^5.1.1","win-ca":"^2.4.0","xml2js":"^0.4.19"},"uuid":"0479fc1c-3d67-49f9-b087-fb9069afe48f","isBuiltin":false,"isUnderDevelopment":false,"id":"PeterJausovec.vscode-docker","identifier":{"value":"PeterJausovec.vscode-docker","_lower":"peterjausovec.vscode-docker"},"extensionLocation":{"$mid":1,"fsPath":"/home/miri/.vscode/extensions/peterjausovec.vscode-docker-0.5.2","path":"/home/miri/.vscode/extensions/peterjausovec.vscode-docker-0.5.2","scheme":"file"}},{"name":"autoimport","displayName":"Auto Import","description":"Automatically finds, parses and provides code actions and code completion for all available imports. Works with Typescript and TSX","version":"1.5.3","publisher":"steoates","engines":{"vscode":"^1.17.0"},"galleryBanner":{"color":"#2d4794","theme":"dark"},"keywords":["typescript","imports","require","auto import","multi-root ready"],"categories":["Other"],"activationEvents":["onLanguage:typescript","onLanguage:typescriptreact"],"main":"/home/miri/.vscode/extensions/steoates.autoimport-1.5.3/out/src/extension","contributes":{"commands":[{"command":"extension.scanNodeModules","title":"Scan node_modules for imports"}],"configuration":{"type":"object","title":"Auto Import configuration","properties":{"autoimport.filesToScan":{"type":"string","default":"**/*.{ts,tsx}","description":"Glob for files to watch and scan, e.g ./src/** ./src/app/**/*.ts. Defaults to **/*.{ts,tsx}"},"autoimport.showNotifications":{"type":"boolean","default":false,"description":"Specifies wether to show notifications from Auto Import"},"autoimport.doubleQuotes":{"type":"boolean","default":false,"description":"Specifies wether to use double quotes"},"autoimport.spaceBetweenBraces":{"type":"boolean","default":true,"description":"Specifies wether to use spaces between first and last brace"},"autoimport.autoComplete":{"type":"boolean","default":true,"description":"Adds found items to intellisense and automatically imports then"},"autoimport.useSemiColon":{"type":"boolean","default":true,"description":"Use ; at the end of a line e.g Import * from ./app or Import * from ./app; - Default True"}}}},"icon":"icon.png","homepage":"https://github.com/soates/Auto-Import","scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"devDependencies":{"typescript":"^2.0.3","vscode":"^1.0.0","@types/node":"^6.0.40"},"dependencies":{"lodash":"^4.13.1"},"uuid":"70378119-1d85-4935-9733-0298c7a369a2","isBuiltin":false,"isUnderDevelopment":false,"id":"steoates.autoimport","identifier":{"value":"steoates.autoimport","_lower":"steoates.autoimport"},"extensionLocation":{"$mid":1,"fsPath":"/home/miri/.vscode/extensions/steoates.autoimport-1.5.3","path":"/home/miri/.vscode/extensions/steoates.autoimport-1.5.3","scheme":"file"}},{"name":"html-preview-vscode","displayName":"HTML Preview","description":"Provides ability to preview HTML documents.","version":"0.2.5","publisher":"tht13","author":"Thomas Haakon Townsend","license":"MIT","readme":"README.md","repository":{"type":"git","url":"https://github.com/tht13/html-preview-vscode"},"galleryBanner":{"color":"#78d6f0","theme":"light"},"bugs":"https://github.com/tht13/html-preview-vscode/issues","homepage":"https://github.com/tht13/html-preview-vscode/blob/master/README.md","icon":"icon.png","main":"/home/miri/.vscode/extensions/tht13.html-preview-vscode-0.2.5/out/extension.js","engines":{"vscode":"^1.26.0"},"categories":["Programming Languages"],"activationEvents":["onLanguage:html","onCommand:html.preview.toggleLock","onCommand:html.preview.refresh","onCommand:html.showPreview","onCommand:html.showPreviewToSide","onCommand:html.showLockedPreviewToSide","onCommand:html.showSource","onCommand:html.showPreviewSecuritySelector","onWebviewPanel:html.preview"],"contributes":{"commands":[{"command":"html.showPreview","title":"Open Preview","category":"HTML","icon":{"light":"./media/Preview.svg","dark":"./media/Preview_inverse.svg"}},{"command":"html.showPreviewToSide","title":"Open Preview to the Side","category":"HTML","icon":{"light":"./media/PreviewOnRightPane_16x.svg","dark":"./media/PreviewOnRightPane_16x_dark.svg"}},{"command":"html.showLockedPreviewToSide","title":"Open Locked Preview to the Side","category":"HTML","icon":{"light":"./media/PreviewOnRightPane_16x.svg","dark":"./media/PreviewOnRightPane_16x_dark.svg"}},{"command":"html.showSource","title":"Show Source","category":"HTML","icon":{"light":"./media/ViewSource.svg","dark":"./media/ViewSource_inverse.svg"}},{"command":"html.showPreviewSecuritySelector","title":"Change Preview Security Settings","category":"HTML"},{"command":"html.preview.refresh","title":"Refresh Preview","category":"HTML"},{"command":"html.preview.toggleLock","title":"Toggle Preview Locking","category":"HTML"}],"menus":{"editor/title":[{"command":"html.showPreviewToSide","when":"editorLangId == html","alt":"html.showPreview","group":"navigation"},{"command":"html.showSource","when":"htmlPreviewFocus","group":"navigation"},{"command":"html.preview.refresh","when":"htmlPreviewFocus","group":"1_html"},{"command":"html.preview.toggleLock","when":"htmlPreviewFocus","group":"1_html"},{"command":"html.showPreviewSecuritySelector","when":"htmlPreviewFocus","group":"1_html"}],"explorer/context":[{"command":"html.showPreview","when":"resourceLangId == html","group":"navigation"}],"editor/title/context":[{"command":"html.showPreview","when":"resourceLangId == html","group":"navigation"}],"commandPalette":[{"command":"html.showPreview","when":"editorLangId == html","group":"navigation"},{"command":"html.showPreviewToSide","when":"editorLangId == html","group":"navigation"},{"command":"html.showLockedPreviewToSide","when":"editorLangId == html","group":"navigation"},{"command":"html.showSource","when":"htmlPreviewFocus","group":"navigation"},{"command":"html.showPreviewSecuritySelector","when":"editorLangId == html"},{"command":"html.showPreviewSecuritySelector","when":"htmlPreviewFocus"},{"command":"html.preview.toggleLock","when":"htmlPreviewFocus"}]},"keybindings":[{"command":"html.showPreview","key":"shift+ctrl+v","mac":"shift+cmd+v","when":"editorLangId == html"},{"command":"html.showPreviewToSide","key":"ctrl+k v","mac":"cmd+k v","when":"editorLangId == html"}],"configuration":{"type":"object","title":"HTML","order":20,"properties":{"html.preview.scrollPreviewWithEditor":{"type":"boolean","default":true,"description":"When a html editor is scrolled, update the view of the preview.","scope":"resource"},"html.preview.markEditorSelection":{"type":"boolean","default":true,"description":"Mark the current editor selection in the html preview.","scope":"resource"},"html.preview.scrollEditorWithPreview":{"type":"boolean","default":true,"description":"When a html preview is scrolled, update the view of the editor.","scope":"resource"},"html.preview.doubleClickToSwitchToEditor":{"type":"boolean","default":true,"description":"Double click in the html preview to switch to the editor.","scope":"resource"},"html.trace":{"type":"string","enum":["off","verbose"],"default":"off","description":"Enable debug logging for the html extension.","scope":"window"}}}},"scripts":{"vscode:prepublish":"npm run compile","compile":"npm run build-ext && npm run build-preview","build-ext":"npx tsc -p ./tsconfig.json","build-preview":"./node_modules/.bin/webpack-cli","watch":"npx tsc -watch -p ./tsconfig.json","postinstall":"node ./node_modules/vscode/bin/install","test":"npm run compile && node ./node_modules/vscode/bin/test","preversion":"npm run compile","version":"./node_modules/.bin/changes","postversion":"git push --follow-tags"},"dependencies":{"cheerio":"1.0.0-rc.2","lodash.throttle":"4.1.1","vscode-nls":"3.2.4"},"devDependencies":{"@studio/changes":"1.7.0","@types/cheerio":"0.22.9","@types/lodash.throttle":"4.1.4","@types/mocha":"2.2.42","@types/node":"10.9.4","ts-loader":"4.0.1","tslib":"^1.9.3","tslint":"5.8.0","typescript":"3.0.3","vscode":"1.1.21","webpack":"4.19.0","webpack-cli":"3.1.0"},"uuid":"76fbde36-77d4-4688-b1f8-202727442961","isBuiltin":false,"isUnderDevelopment":false,"id":"tht13.html-preview-vscode","identifier":{"value":"tht13.html-preview-vscode","_lower":"tht13.html-preview-vscode"},"extensionLocation":{"$mid":1,"fsPath":"/home/miri/.vscode/extensions/tht13.html-preview-vscode-0.2.5","path":"/home/miri/.vscode/extensions/tht13.html-preview-vscode-0.2.5","scheme":"file"}},{"name":"clang-format","displayName":"Clang-Format","description":"Use Clang-Format in Visual Studio Code","version":"1.9.0","publisher":"xaver","engines":{"vscode":"^1.1.0"},"galleryBanner":{"color":"#005577","theme":"dark"},"dependencies":{"sax":"^1.2.1"},"categories":["Formatters"],"keywords":["C++","JavaScript","Objective-C","Clang","LLVM","Protobuf","CUDA"],"main":"/home/miri/.vscode/extensions/xaver.clang-format-1.9.0/out/src/extension","activationEvents":["onLanguage:cpp","onLanguage:c","onLanguage:objective-c","onLanguage:objective-cpp","onLanguage:java","onLanguage:javascript","onLanguage:typescript","onLanguage:proto","onLanguage:proto3","onLanguage:apex","onLanguage:glsl","onLanguage:cuda"],"contributes":{"configuration":{"type":"object","title":"Clang-Format configuration","properties":{"clang-format.executable":{"type":"string","default":"clang-format","description":"clang-format executable path"},"clang-format.style":{"type":"string","default":"file","description":"clang-format style.(-style=value, value can be file, LLVM, Google, Chromium, Mozilla, WebKit or json configure)"},"clang-format.fallbackStyle":{"type":"string","default":"LLVM","description":"clang-format fallback style.(-fallback-style=value, value can be none, LLVM, Google, Chromium, Mozilla, WebKit)"},"clang-format.language.cpp.enable":{"type":"boolean","default":true,"description":"enable formatting for C++ (requires reloading Visual Studio Code)"},"clang-format.language.cpp.style":{"type":"string","default":"","description":"clang-format fallback style for C++, left empty to use clang-format.style"},"clang-format.language.cpp.fallbackStyle":{"type":"string","default":"","description":"clang-format fallback style for C++, left empty to use clang-format.fallbackStyle"},"clang-format.language.c.enable":{"type":"boolean","default":true,"description":"enable formatting for C (requires reloading Visual Studio Code)"},"clang-format.language.c.style":{"type":"string","default":"","description":"clang-format fallback style for C, left empty to use clang-format.style"},"clang-format.language.c.fallbackStyle":{"type":"string","default":"","description":"clang-format fallback style for C, left empty to use clang-format.fallbackStyle"},"clang-format.language.objective-c.enable":{"type":"boolean","default":true,"description":"enable formatting for Objective-C (requires reloading Visual Studio Code)"},"clang-format.language.objective-c.style":{"type":"string","default":"","description":"clang-format fallback style for Objective-C, left empty to use clang-format.style"},"clang-format.language.objective-c.fallbackStyle":{"type":"string","default":"","description":"clang-format fallback style for Objective-C, left empty to use clang-format.fallbackStyle"},"clang-format.language.objective-cpp.enable":{"type":"boolean","default":true,"description":"enable formatting for Objective-C++ (requires reloading Visual Studio Code)"},"clang-format.language.objective-cpp.style":{"type":"string","default":"","description":"clang-format fallback style for Objective-C++, left empty to use clang-format.style"},"clang-format.language.objective-cpp.fallbackStyle":{"type":"string","default":"","description":"clang-format fallback style for Objective-C++, left empty to use clang-format.fallbackStyle"},"clang-format.language.java.enable":{"type":"boolean","default":true,"description":"enable formatting for Java (requires reloading Visual Studio Code)"},"clang-format.language.java.style":{"type":"string","default":"","description":"clang-format fallback style for Java, left empty to use clang-format.style"},"clang-format.language.java.fallbackStyle":{"type":"string","default":"","description":"clang-format fallback style for Java, left empty to use clang-format.fallbackStyle"},"clang-format.language.javascript.enable":{"type":"boolean","default":true,"description":"enable formatting for JavaScript (requires reloading Visual Studio Code)"},"clang-format.language.javascript.style":{"type":"string","default":"","description":"clang-format fallback style for JavaScript, left empty to use clang-format.style"},"clang-format.language.javascript.fallbackStyle":{"type":"string","default":"google","description":"clang-format fallback style for JavaScript"},"clang-format.language.typescript.enable":{"type":"boolean","default":true,"description":"enable formatting for TypeScript (requires reloading Visual Studio Code)"},"clang-format.language.typescript.style":{"type":"string","default":"","description":"clang-format fallback style for TypeScript, left empty to use clang-format.style"},"clang-format.language.typescript.fallbackStyle":{"type":"string","default":"google","description":"clang-format fallback style for TypeScript"},"clang-format.language.proto.enable":{"type":"boolean","default":true,"description":"enable formatting for Protobuf (requires reloading Visual Studio Code)"},"clang-format.language.proto.style":{"type":"string","default":"","description":"clang-format fallback style for Protobuf, left empty to use clang-format.style"},"clang-format.language.proto.fallbackStyle":{"type":"string","default":"","description":"clang-format fallback style for Protobuf, left empty to use clang-format.fallbackStyle"},"clang-format.language.apex.enable":{"type":"boolean","default":true,"description":"enable formatting for Apex (requires reloading Visual Studio Code)"},"clang-format.language.apex.style":{"type":"string","default":"","description":"clang-format fallback style for Apex, left empty to use clang-format.style"},"clang-format.language.apex.fallbackStyle":{"type":"string","default":"","description":"clang-format fallback style for Apex, left empty to use clang-format.fallbackStyle"},"clang-format.language.glsl.enable":{"type":"boolean","default":true,"description":"enable formatting for GLSL (requires reloading Visual Studio Code)"},"clang-format.language.glsl.style":{"type":"string","default":"","description":"clang-format fallback style for GLSL, left empty to use clang-format.style"},"clang-format.language.glsl.fallbackStyle":{"type":"string","default":"","description":"clang-format fallback style for GLSL, left empty to use clang-format.fallbackStyle"},"clang-format.language.cuda.enable":{"type":"boolean","default":true,"description":"enable formatting for CUDA (requires reloading Visual Studio Code)"},"clang-format.language.cuda.style":{"type":"string","default":"","description":"clang-format fallback style for CUDA, left empty to use clang-format.style"},"clang-format.language.cuda.fallbackStyle":{"type":"string","default":"","description":"clang-format fallback style for CUDA, left empty to use clang-format.fallbackStyle"},"clang-format.assumeFilename":{"type":"string","default":"","description":"When reading from stdin, clang-format assumes this filename to look for a style config file (with -style=file) and to determine the language."}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/node":"^7.10.2","@types/sax":"^1.0.1","typescript":"^3.1.6","vscode":"^1.1.22"},"icon":"clang-format.png","repository":{"type":"git","url":"https://github.com/xaverh/vscode-clang-format-provider"},"license":"MIT","uuid":"04208f17-8aed-4d49-b0a2-fbce829efbeb","isBuiltin":false,"isUnderDevelopment":false,"id":"xaver.clang-format","identifier":{"value":"xaver.clang-format","_lower":"xaver.clang-format"},"extensionLocation":{"$mid":1,"fsPath":"/home/miri/.vscode/extensions/xaver.clang-format-1.9.0","path":"/home/miri/.vscode/extensions/xaver.clang-format-1.9.0","scheme":"file"}}]}